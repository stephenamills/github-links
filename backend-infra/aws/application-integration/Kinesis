https://github.com/aws-solutions-library-samples/real-time-analytics-spark-streaming # A solution describing data-processing design pattern for streaming data through Kinesis and Spark Streaming at real-time.

https://github.com/aws-samples/amazon-kinesis-learning # Learning Amazon Kinesis Development
https://github.com/aws-samples/amazon-elasticsearch-lambda-samples # Data ingestion for Amazon Elasticsearch Service from S3 and Amazon Kinesis, using AWS Lambda: Sample code
https://github.com/aws-samples/amazon-kinesis-video-streams-media-viewer # View HLS and MPEG-DASH output from Amazon Kinesis Video Streams
https://github.com/aws-samples/amazon-serverless-datalake-workshop # A workshop demonstrating the capabilities of S3, Athena, Glue, Kinesis, and Quicksight.
https://github.com/aws-samples/amazon-kinesis-data-analytics-examples # Example applications in Java, Python and SQL for Kinesis Data Analytics, demonstrating sources, sinks, and operators.
https://github.com/aws-samples/reactive-refarch-cloudformation # Reactive Microservices Architectures with Amazon ECS, AWS Lambda, Amazon Kinesis Streams, Amazon ElastiCache, and Amazon DynamoDB
https://github.com/aws-samples/amazon-kinesis-video-streams-demos # A place to add different use cases for different Kinesis Video Stream Assets
https://github.com/aws-samples/kinesis-poster-worker # Simple multi-threaded Kinesis Poster and Worker Python examples
https://github.com/aws-samples/amazon-kinesis-replay # A Java application that replays events that are stored in objects in Amazon S3 into a Amazon Kinesis stream as if they occurred in real time.
https://github.com/aws-samples/aws-lambda-fanout # A sample AWS Lambda function that accepts messages from an Amazon Kinesis Stream and transfers the messages to another data transport.
https://github.com/aws-samples/mqtt-kinesis-bridge # Simple MQTT to Kinesis bridge Python example
https://github.com/aws-samples/amazon-kinesis-analytics-streaming-etl # Streaming ETL with Apache Flink and Amazon Kinesis Data Analytics
https://github.com/aws-samples/amazon-kinesis-analytics-taxi-consumer # Sample Apache Flink application that can be deployed to Kinesis Analytics for Java. It reads taxi events from a Kinesis data stream, processes and aggregates them, and ingests the result to an Ama
zon Elasticsearch Service cluster for visualization with Kibana.https://github.com/aws-samples/flink-stream-processing-refarch # Reference architecture for real-time stream processing with Apache Flink on Amazon EMR, Amazon Kinesis, and Amazon Elasticsearch Service.
https://github.com/aws-samples/amazon-kinesis-video-streams-producer-embedded-c # Light-wight Amazon Kinesis Video Streams Producer SDK For FreeRTOS/Embedded Linux
https://github.com/aws-samples/aws-application-auto-scaling-kinesis # Leveraging Amazon Application Auto Scaling you have now the possibility to interact to custom resources in order to automatically handle infrastructure or service resize. You will find a demo regard
ing how to integrate Amazon Application Auto Scaling with Amazon Kinesis Data Stream in order to scale your shards, in a fully serverless fashionhttps://github.com/aws-samples/amazon-kinesis-video-streams-media-interface # Amazon Kinesis Video Streams Media Interface provides abstract interfaces for board specific media APIs. This repository also contains boards sensors/encoder implementations for Amazon Kines
is Video Streams Producer and WebRTC with out-of-box samples.https://github.com/aws-samples/amazon-kinesis-analytics-beam-taxi-consumer # Sample Apache Beam pipeline that can be deployed to Amazon Managed Service for Apache Flink. It reads taxi events from a Kinesis data stream, processes and aggregates them, and ingests the re
sult to Amazon CloudWatch for visualization.https://github.com/aws-samples/amazon-kinesis-video-streams-webrtc-sdk-js-with-amazon-cognito # Enabling Video Chats Using Amazon Kinesis Video Streams for WebRTC
https://github.com/aws-samples/aws-blog-firehose-custom-prefixes-for-s3-objects # Sample code for blog - Custom S3 Prefixes and Kinesis Data Firehose
https://github.com/aws-samples/amazon-kinesis-data-analytics-flink-starter-kit # Amazon Kinesis Data Analytics Flink Starter Kit helps you with the development of Flink Application with Kinesis Stream as a source and Amazon S3 as a sink. This demonstrates the use of S
ession Window with AggregateFunction.https://github.com/aws-samples/serverless-realtime-analytics # Demo application on how to create a serverless realtime analytics application using Kinesis Data Streams, Kinesis Firehose, DynamoDB and Lambda, using Cognito to secure the App.
https://github.com/aws-samples/amazon-kinesis-video-streams-webrtc-sdk-c-for-freertos # 
https://github.com/aws-samples/kinesis-auto-scaling # A lightweight system to automatically scale Kinesis Data Streams up and down based on throughput.
https://github.com/aws-samples/aws-fargate-log-aggregator-with-fluentd # A reference architecture for running a Fluentd Log Aggregator on AWS Fargate, which forwards logs to Kinesis Firehose
https://github.com/aws-samples/amazon-kinesis-sagemaker-promotion-recommendations # CloudFormation templates and scripts demonstrating how to build a promotion recommendation system using Kinesis and SageMaker.
https://github.com/aws-samples/amazon-kinesis-video-streams-consumer-library-for-python # 
https://github.com/aws-samples/amazon-kinesis-data-processor-aws-fargate # Sample code for the AWS Big Data Blog Post Building a scalable streaming data processor with Amazon Kinesis Data Streams on AWS Fargate 
https://github.com/aws-samples/analyzing-reddit-sentiment-with-aws # Learn how to use Kinesis Firehose, AWS Glue, S3, and Amazon Athena by streaming and analyzing reddit comments in realtime. 100-200 level tutorial.
https://github.com/aws-samples/aws-dms-cdc-sample # AWS Lambda and CloudFormation code for loading CDC data from Relational databases to Amazon Kinesis using Database Migration Service.
https://github.com/aws-samples/amazon-kinesis-timestream-grafana # Sample serverless application that reads events from Amazon Kinesis Data Streams and batches records to Amazon Timestream via Apache Flink app, visualizing results via Grafana.
https://github.com/aws-samples/amazon-kinesis-data-analytics-flinktableapi # A walkthrough of setting up a Kinesis Data Analytics for Java Application which ingest streaming JSON data and leverages the Flink Table API.
https://github.com/aws-samples/building-a-realtime-data-platform-workshop # A self-paced workshop designed to allow you to get hands on with building a real-time data platform using serverless technologies such as Kinesis Firehose, AWS Lambda and Amazon Elasticsearch.
https://github.com/aws-samples/kda-flink-app-autoscaling # This repo demonstrates how to use AWS application auto-scaling to implement custom-scaling in your Kinesis Data Analytics for Apache Flink applications
https://github.com/aws-samples/amazon-qldb-financialwallet-crud-aws-samples-v2 # Development code to show simple CRUD operations on Amazon QLDB and setup Amazon Kinesis Data streams. The solution uses AWS Lambda Amazon API Gateway Amazon QLDB Amazon DynamoDB and Amazo
n Kinesis Data Streamshttps://github.com/aws-samples/amazon-kinesis-data-analytics-blueprints # Kinesis Data Analytics Blueprints are a curated collection of Apache Flink applications. Each blueprint will walk you through how to solve a practical problem related to stream processing using 
Apache Flink. These blueprints can be leveraged to create more complex applications to solve your business challenges in Apache Flink.https://github.com/aws-samples/kinesis-data-analytics-apache-flink-async-io # Showcases the AsyncIO Functionality within Apache Flink for Kinesis Data Analytics
https://github.com/aws-samples/amazon-emr-optimize-data-processing # Optimizing downstream data processing with Amazon Kinesis Data Firehose and Amazon EMR running Apache Spark
https://github.com/aws-samples/aws-dms-cdc-data-pipeline # Data Pipeline for CDC data from MySQL DB to Amazon OpenSearch Service through Amazon Kinesis using Amazon Data Migration Service(DMS).
https://github.com/aws-samples/amazon-kinesis-data-analytics-flink-benchmarking-utility # Amazon Managed Service for Apache Flink Benchmarking Utility helps with capacity planning, integration testing, and benchmarking of Amazon Managed Service for Apache Flink applic
ations.https://github.com/aws-samples/amazon-kinesis-data-analytics-snapshot-manager-for-flink # Snapshot manager for Amazon Kinesis Data Analytics for Apache Flink helps the users to generate a snapshot on a periodic basis.
https://github.com/aws-samples/amazon-kinesis-load-testing-with-locust # Easy Amazon Kinesis load testing with Locust - a modern load testing framework
https://github.com/aws-samples/amazon-kinesis-video-streams-serverless-surveillance-platform # Sample to build a cost-effective cloud-connected video surveillance platform
https://github.com/aws-samples/amazon-kinesis-socket-server-sample # Sample Java application that uses the Amazon Kinesis Client Library to read a Kinesis Data Stream and output data records to connected clients over a TCP socket.
https://github.com/aws-samples/autonomous-surveillance-demo # Autonomous Surveillance Demo using AWS RoboMaker, AWS IoT and Amazon Kinesis Video Streams.
https://github.com/aws-samples/aws-security-hub-glue-aggregator-terraform # These Terraform modules aggregate Security Hub findings to centralized account using Amazon Kinesis Firehose and AWS Glue
https://github.com/aws-samples/amazon-kinesis-data-analytics-for-pyflink-applications # Sample code for building a Python application for Apache Flink on Kinesis Data Analytics.
https://github.com/aws-samples/kinesis-video-streams-webrtc-custom-channel-authorizor # A sample custom authorizor solution to control access to signalling channels and build a channel re-use pattern for Amazon Kinesis Video Streams for WebRTC.
https://github.com/aws-samples/aws-serverless-realtime-aggregation # Set up a near-real-time, scalable, serverless data aggregation pipeline in the AWS Cloud with Amazon DynamoDB, AWS Lambda, and Amazon Kinesis. 
https://github.com/aws-samples/aws-analytics-immersion-day # Describes the concepts of lambda architecture and the actual deployment process with an example of building a serverless business intelligence systems using Amazon Kinesis, S3, Athena, OpenSearch Service, an
d QuickSight.https://github.com/aws-samples/kinesis-data-analytics-flink-aurora-sink # Showcases how to use Apache Flink on Kinesis Data Analytics to write to Amazon Aurora
https://github.com/aws-samples/opensearch-serverless-common-usage-patterns # Typical use cases of opensearch serverelss: search, time-series, kinesis firehose integration, securing with VPC
https://github.com/aws-samples/amazon-kinesis-analytics-realtime-anomaly-detection # Sample for the German article "Anomalie-Erkennung für Echtzeit-Datenströme" by Constantin Gonzalez and Florian Mair published in Big Data Insider. 
https://github.com/aws-samples/aws-ml-data-lake-workshop # As customers move from building data lakes and analytics on AWS to building machine learning solutions, one of their biggest challenges is getting visibility into their data for feature engineering and data fo
rmat conversions for using AWS SageMaker. In this workshop, we demonstrate best practices and build data pipelines for training data using Amazon Kinesis Data Firehose, AWS Glue, and Amazon SageMaker, and then we use Amazon SageMaker for inference.https://github.com/aws-samples/build-dynamodb-integration-with-kinesis # 
https://github.com/aws-samples/aws-dynamodb-kinesisfirehose-s3-ingestion # 
https://github.com/aws-samples/aws-terraform-cross-account-kinesis-example # This Example demonstrates how to build a cross-account Data Pipeline using terraform, kinesis, s3 and Amazon EMR
https://github.com/aws-samples/sagemaker-feature-store-real-time-recommendations # Build a real-time recommendation engine for an e-commerce website leveraging SageMaker Feature Store as a core component of the solution.
https://github.com/aws-samples/kinesis-data-analytics-stream-to-dynamodb # 
https://github.com/aws-samples/aws-serverless-stream-ingest-transform-load # In this pattern, data records are ingested and then modified with simple transformations such as field level substitutions and data enrichment from relatively small and static data sets. A La
mbda function is invoked by Kinesis Data Firehose as records are received by the delivery stream. the Lambda function then performs a simple processing job and returns the transformed or enriched records back to Kinesis Data Firehose. Firehose then buffers and sends the modified records to the configured destinations. A copy of the source records is saved in S3 as a backup and for future analysis.https://github.com/aws-samples/kda-metrics-dashboard # This repository contains a CloudFormation template that you can customize to deploy a sample metrics dashboard for your Kinesis Data Analytics for Apache Flink application.
https://github.com/aws-samples/aws-serverless-centralized-logs # The purpose of this sample is to show how to create a serverless and centralized architecture to ingest, store and query logs utilizing Amazon Kinesis Data Firehose, Amazon S3 and Amazon Athena.
https://github.com/aws-samples/amazon-kinesis-eks-fargate-consumer # 
https://github.com/aws-samples/amazon-kinesis-video-streams-media-screencast-android # 
https://github.com/aws-samples/aws-kinesis-data-streams-replicator # An example that demonstrates real-time replication of data between Kinesis Data Streams in two regions, using Lambda Enhanced Fan-Out and checkpointing for observability and easy disaster recovery fa
cilitationhttps://github.com/aws-samples/aws-serverless-tracking-pixel # This solution deploys a lambda function and an API Gateway HTTP API to process tracking information from the HTTP request, returning a 1x1 transparent pixel so it can be invoked from an IMG HTML tag. The p
rocessing AWS Lambda Function sends the parsed information to an Amazon Kinesis Data Firehose Stream that should already exist. This solution is created as a baseline to be modified so it adapts to the specific use-case, according to the incoming information that should be processed.https://github.com/aws-samples/web-analytics-on-aws # This web analytics demo shows how to collect web logs with API Gateway and store them into S3 through Amazon Kinesis. Then this project shows how to analyze web logs with Amazon Athena. 
https://github.com/aws-samples/realtime-slot-car-racing-with-aws-amplify-aws-iot-core-and-amazon-kinesis-video-streams # 
https://github.com/aws-samples/change-data-capture-mysql-opensearch #Code to set up CDC applications Enable change data capture on RDS for MySQL applications that are using XA transactions blog post
https://github.com/aws-samples/aws-serverless-nlp-comprehend-using-aws-cdk # This repository describes how to design and implement Natural Language Processing(NLP)-based service using AWS Serverless, Amazon Comprehend and AWS Cloud Development Kit(CDK)
https://github.com/aws-samples/power-transformers-iot-kinesis-elasticsearch # CDK to deploy a sample IoT application that collects data from Distribution Power Transformers and provides near real-time dashboards.
https://github.com/aws-samples/amazon-kda-studio-flinksql-example # This sample gets you started to run Flink SQL on AWS.
https://github.com/aws-samples/aws-real-time-web-shop-analytics # Real-time web shop streaming analytics on AWS
https://github.com/aws-samples/aws-fargate-server-sent-events-sse-amazon-kinesis-data-streams # When dealing with real-time data it is often required to send that data over the internet to various sources. Various technologies have enabled this such as web sockets and
 long polling. Recently server-sent events (SSE) has become a popular technology to push updates to clients. Ingesting this type of data source into AWS requires a client to be running continuously to receive those events. This sample shows how to connect to an SSE endpoint using AWS Fargate. This sample creates a docker image with a simple SSE client which publishes to an Amazon Kinesis Data Streams stream, then we simply store the event data in Amazon S3.https://github.com/aws-samples/unified-log-aggregation-and-analytics # The proposed solution shows and approach to unify and centralize logs across different compute platforms like EC2, ECS, EKS and Lambda with Kinesis Data Firehose using log collection agents (EC2 Ki
nesis agent), log routers (Fluentbit and Firelens) and lambda extension. We can easily deploy the solution presented here on the customer site using the CDK scripts packaged part of this article. Amazon managed Elastic search with Kibana is used to visualize the logs collected across different applications running on different compute platforms.https://github.com/aws-samples/automate-deployment-and-version-update-of-kda-application # Automate deployment and version updates for Amazon Kinesis Data Analytics applications with AWS CodePipeline
https://github.com/aws-samples/amazon-kinesis-auto-scale # 
https://github.com/aws-samples/aws-dms-serverless-to-kinesis-data-pipeline # Data Pipeline for CDC data from MySQL DB to Amazon Kinesis Data Streams through Amazon Kinesis using Amazon DMS Serverless
https://github.com/aws-samples/amazon-kinesis-data-streams-health-check # 
https://github.com/aws-samples/amazon-kinesis-low-level-producer-sample # 
https://github.com/aws-samples/aws-blog-grpc-kinesis # 
https://github.com/aws-samples/efo-ltr-flink-sample # Sample showcasing the use of FlinkKinesisConsumer with EFO support
https://github.com/aws-samples/sending-cloudwatch-logs-to-splunk-using-amazon-kinesis-data-firehose # This solution helps customers to send logs from CloudWatch via Amazon Kinesis Firehose to Splunk Enterprise or Splunk Cloud as a delivery destination. Amazon Kinesis 
Firehose allows fully-managed, reliable and scalable data streaming to Splunk.https://github.com/aws-samples/amazon-kinesis-video-streams-time-lapse-video-example # Sample code to generate time-lapse video from Amazon Kinesis Video Streams.
https://github.com/aws-samples/aws-opensearch-ingestion-tutorials # This sample codes show how to ingest data into Amazon OpenSearch or OpenSearch Serverless using OpenSearch Ingestion. Amazon OpenSearch Ingestion is a kind of alternative for OpenSource Logstash or Am
azon Kinesis Data Firehose.https://github.com/aws-samples/amazon-kinesis-data-analytics-apache-flink-server-sent-events-sse # When dealing with real-time data it is often required to send that data over the internet to various sources. Various technologies have enabled this such as web sockets 
and long polling. Recently server-sent events (SSE) has become a popular technology to push updates to clients. Ingesting this type of data source into AWS requires a client to be running continuously to receive those events. This sample shows how to connect to an SSE endpoint using an Amazon Kinesis Data Analytics application using Apache Flink. As the events arrive they are published to an Amazon Kinesis Data Streams stream then in this sample we simply store the event data in Amazon S3.https://github.com/aws-samples/spark-kinesis-connector-emr-sample # 
https://github.com/aws-samples/streaming-data-pipeline-from-kafka-to-s3-using-aws-kinesis-firehose # Streaming data pipeline to continuously load data from an Amazon MSK or MSK Serverless cluster to Amazon S3 using Amazon Kinesis Data Firehose.
https://github.com/aws-samples/aws-cdk-centralize-logs-typescript # This is a CDK project that set up centralized logging to an S3 bucket via a Kinesis Firehose. The solution allows you to specify trusted accounts for different regions and then will configure the Clou
dWatch Log Delivery Endpoint with proper permission in those regionsSolution is based heavily on Centralize Cloudwatch Log with CDK https://github.com/aws-samples/aws-centralize-logs-using-cdkhttps://github.com/aws-samples/amazon-managed-service-for-apache-flink-taxi-consumer # Sample Apache Flink application that can be deployed to Amazon Managed Service for Apache Flink. It reads taxi events from a Kinesis data stream, processes and aggregates them, and 
ingests the result to an Amazon OpenSearch Service cluster for visualization with Dashboard.https://github.com/aws-samples/aws-lambda-kinesis-aggregated-event-filtering # Sample project which shows how you can use partition keys to trigger a lambda for specific user records when kinesis aggregation is applied manually
https://github.com/aws-samples/kinesis-data-streams-replication-using-kinesis-data-analytics-studio # 
https://github.com/aws-samples/amazon-sagemaker-predictive-maintenance # This repository is part of an AWS blog post that describes how you can combine and leverage services like Amazon Kinesis, AWS Glue & Amazon SageMaker to build a near real-time feature engineering
 and inference solution for predictive maintenance.https://github.com/aws-samples/kinesis-udfs-textanalytics # 
https://github.com/aws-samples/ingesting-iot-data-into-amazon-s3-using-amazon-kinesis-data-firehose # 
https://github.com/aws-samples/dynamodb-kinesis-spring-blog # 
https://github.com/aws-samples/aws-kinesis-firehose-resources # 
https://github.com/aws-samples/cloud-gateway-for-amazon-kinesis-video-streams # AWS CDK project to deploy a cloud gateway for ingestion of IP cameras to Amazon Kinesis Video Streams
https://github.com/aws-samples/amazon-rds-push-db-load-using-cloudwatch-to-dynatrace # Deliver RDS Performance Insights to Dynatrace (APM tool)
https://github.com/aws/amazon-kinesis-streams-for-fluent-bit # A Fluent Bit output plugin for Kinesis Streams
https://github.com/aws/amazon-kinesis-firehose-for-fluent-bit # A Fluent Bit output plugin for Amazon Kinesis Data Firehose
https://github.com/aws/amazon-kinesis-video-streams-parser-library # Amazon Kinesis Video Streams parser library is for developers to include in their applications that makes it easy to work with the output of video streams such as retrieving frame-level objects, meta
data for fragments, and more.
https://github.com/aws/aws-kinesisanalytics-flink-connectors # This library contains various Apache Flink connectors to connect to AWS data sources and sinks. 
https://github.com/aws/aws-kinesisanalytics-runtime # This library contains the Kinesis Analytics stream processing runtime configuration classes. 

