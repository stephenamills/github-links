https://github.com/aws-ia/cfn-ps-codepipeline-bluegreen-deployment # 
https://github.com/build-on-aws/cicd-pipeline-for-containers # This repository sets up an end-to-end CI/CD container pipeline with Hashicorp Terraform based on native AWS services for hosting and testing application code, building a container image from the code, push
ing and storing the container image to ECR, and deploying this container on EKS as a deployment.                                                                                                                                                                            https://github.com/aws-samples/aws-codepipeline-s3-codedeploy-linux # Use this sample when creating a simple pipeline in AWS CodePipeline while following the Simple Pipeline Walkthrough tutorial. http://docs.aws.amazon.com/codepipeline/latest/userguide/getting-started
-w.html                                                                                                                                                                                                                                                                     https://github.com/aws-samples/codepipeline-nested-cfn # CloudFormation templates, CodeBuild build specification & Python scripts to perform unit tests of a nested CloudFormation template.
https://github.com/aws-samples/aws-codepipeline-codebuild-with-postman # Automating your API testing with AWS CodeBuild, AWS CodePipeline, and Postman
https://github.com/aws-samples/aws-codepipeline-terraform-cicd-samples # 
https://github.com/aws-samples/aws-codepipeline-stepfunctions # This project shows how to integrate AWS CodePipeline and AWS Step Functions state machines. The integration enables developers to build much simpler CodePipeline actions that perform a single task and to 
delegate the complexity of dealing with workflow-driven behavior associated with that task to a proper state machine engine. As such, developers will be able to build more intuitive pipelines and still being able to visualize and troubleshoot their pipeline actions in detail by examining the state machine execution logs.                                                                                                                                                                                                                      https://github.com/aws-samples/aws-codepipeline-multi-branch-strategy # This blog post presents a solution for automated pipelines creation in CodePipeline when a new branch is created in a CodeCommit Repository.
https://github.com/aws-samples/aws-codepipeline-cicd # 
https://github.com/aws-samples/aws-codepipeline-bitbucket-integration # Integrates AWS CodePipeline with the Bitbucket Server
https://github.com/aws-samples/amazon-sagemaker-safe-deployment-pipeline # Safe blue/green deployment of Amazon SageMaker endpoints using AWS CodePipeline, CodeBuild and CodeDeploy.
https://github.com/aws-samples/aws-codepipeline-docker-vulnerability-scan # CloudFormation Templates to deploy CoreOS Clair and Nginx Website on ECS Fargate as an ECS Service. Also create a CodePipeline for updating the Nginx ECS service on code change.
https://github.com/aws-samples/ecs-blue-green-deployment # Reference architecture for doing blue green deployments on ECS.
https://github.com/aws-samples/amazon-ecs-fullstack-app-terraform # Fullstack app using Amazon ECS & DevOps methodologies (IaC with Terraform and CI/CD with AWS CodePipeline)
https://github.com/aws-samples/aws-codepipeline-devsecops-amazoneks # This solution provides an overview of DevSecOps CICD Pipeline Implementation using AWS DevOps Services and other tools
https://github.com/aws-samples/provision-codepipeline-glue-workflows # Git repo to accompany the AWS DevOps Blog: Using AWS DevOps Tools to model and provision AWS Glue workflows
https://github.com/aws-samples/aws-codepipeline-synthetic-tests # Use this sample to create required resources for running synthetic tests periodically and disable transitions on failures in AWS CodePipeline. 
https://github.com/aws-samples/mlops-e2e # MLOps End-to-End Example using Amazon SageMaker Pipeline, AWS CodePipeline and AWS CDK
https://github.com/aws-samples/aws-codepipeline-cross-region-continuous-deployment # Cross region continuous deployment pipeline for developing high availability applications using AWS CodePipeline
https://github.com/aws-samples/aws-ecs-cicd-terraform # Build and Deploy Spring Petclinic Application to Amazon ECS (Fargate) using Terraform and AWS CodePipeline
https://github.com/aws-samples/aws-codepipeline-custom-action # Amazon EC2 build environments with AWS CodePipeline and custom actions
https://github.com/aws-samples/codepipeline-ecr-build-sf-execution # 
https://github.com/aws-samples/aws-codepipeline-dotnet-lambda # Guidance on how to set up an automated AWS CodePipeline for AWS Lambda functions developed in .NET core. 
https://github.com/aws-samples/aws-codepipeline-third-party-git-repositories # 
https://github.com/aws-samples/aws-cdk-deploy-pipeline-using-aws-codepipeline # This repository describes how to customize AWS CodePipeline to deploy AWS CDK application.
https://github.com/aws-samples/codepipeline-for-lambda-using-terraform # 
https://github.com/aws-samples/aws-multi-region-cicd-with-terraform # A multi region CI/CD pipeline with AWS CodePipeline and AWS CodeBuild in Terraform
https://github.com/aws-samples/aws-blog-codepipeline-third-party-git-build-status # 
https://github.com/aws-samples/aws-codepipeline-at-scale-infrastructure-blog # This repository contains sample code for creating the stacks used in the blog post, "Using AWS CodePipeline and open source tools for at-scale infrastructure deployment."
https://github.com/aws-samples/aws-codepipeline-custom-job-worker-for-jfrog-artifactory # This project walks through integrating JFrog Artifactory with AWS CodePipeline
https://github.com/aws-samples/aws-identitycenter-codepipeline-auto-assignment # 
https://github.com/aws-samples/AWSCodePipeline-S3-AWSCodeDeploy_Windows # Use this sample when creating a simple pipeline in AWS CodePipeline while following the Simple Pipeline Walkthrough tutorial. http://docs.aws.amazon.com/codepipeline/latest/userguide/getting-sta
rted-w.html                                                                                                                                                                                                                                                                 https://github.com/aws-samples/aws-codepipeline-time-windows # Use this sample to create required resources for building time window or black days based approvals in AWS CodePipeline. 
https://github.com/aws-samples/devsecops-terraform-dojo-codepipeline # 
https://github.com/aws-samples/retail-demo-store # AWS Retail Demo Store is a sample retail web application and workshop platform demonstrating how AWS infrastructure and services can be used to build compelling customer experiences for eCommerce, retail, and digital 
marketing use-cases                                                                                                                                                                                                                                                         https://github.com/aws-samples/aws-cloudformation-automated-testing-taskcat-aws-codepipeline # 
https://github.com/aws-samples/codepipeline-lambda-docker-images # 
https://github.com/aws-samples/aws-apprunner-terraform # Build and Deploy Spring Petclinic Application to AWS App Runner using Terraform and AWS CodePipeline
https://github.com/aws-samples/aws-appconfig-codepipeline-cdk # 
https://github.com/aws-samples/serverless-sinatra-sample # Demo code for running Ruby Sinatra on AWS Lambda
https://github.com/aws-samples/aws-kube-code-service # The Code Services Continuous Deployment reference architecture demonstrates how to achieve continuous deployment of an application to a Kubernetes cluster using AWS CodePipeline, AWS CodeCommit, AWS CodeBuild and 
AWS Lambda.                                                                                                                                                                                                                                                                 https://github.com/aws-samples/containers-fargateprofile-devops-via-codepipeline # 
https://github.com/aws-samples/aws-cross-account-cicd-pipeline # Example of how to use CDK to create a CodePipeline CI/CD pipeline, and how to configure it to deploy resources on different AWS Accounts.
https://github.com/aws-samples/amazon-eks-cicd-codepipeline-java-microservices # Sample code to demonstrate Containerized and Kubernetized microservices deployment on Amazon EKS through CI/CD Pipeline using AWS DevOps Tools.
https://github.com/aws-samples/immutable-server-pipeline # This code sample supports the blog post "Create immutable servers using EC2 Image Builder and AWS CodePipeline".
https://github.com/aws-samples/backup-recovery-with-aws-backup # Implement backup and recovery with AWS Backup across your AWS Organizations using a CI/CD pipeline (AWS CodePipeline).
https://github.com/aws-samples/aws-glue-jobs-unit-testing # Demo code to illustrate the execution of PyTest unit test cases for AWS Glue jobs in AWS CodePipeline using AWS CodeBuild projects
https://github.com/aws-samples/iam-policy-tester-pipeline # Test IAM Policies in Multi Account Structures in your CI/CD pipeline
https://github.com/aws-samples/aws-cloudformation-template-scanning-with-cloud-conformity # 
https://github.com/aws-samples/amazon-sagemaker-mlops-byoc-using-codepipeline-aws-cdk # Sample solution to build a deployment pipeline for Amazon SageMaker.
https://github.com/aws-samples/route-53-application-recovery-controller-codepipeline-with-terraform # 
https://github.com/aws-samples/ci-4-terraform-aws-developer-tools-terratest # The module presented in this repository contains code to deploy Continuous Integration (CI) solution based on CodePipeline, CodeBuild and Terratest library, offering the ability to run E2E t
ests on Terraform modules in an automated way.                                                                                                                                                                                                                              https://github.com/aws-samples/aws-devops-pipeline-accelerator # Standardised pipeline accelerators for AWS CodePipeline and GitLab CI for Infrastructure provisioning tools like CloudFormation, CDK and Terraform
https://github.com/aws-samples/service-catalog-framework-with-cross-account-codepipeline # 
https://github.com/aws-samples/aws-glue-cdk-cicd # Build, Test and Deploy ETL solutions using AWS Glue and AWS CDK based CI/CD pipelines
https://github.com/aws-samples/aws-codecommit-codepipeline-cobol-mainframe # Use AWS CI/CD services and Micro Focus solutions to make agile the mainframe development environment in Financial Institutions
https://github.com/aws-samples/cross-account-ml-codepipeline # 
https://github.com/aws-samples/gitlab-to-codecommit-migration # Script to migrate from GitLab to Amazon CodeCommit easily and setup your AWS environment with CodeCommit, CodePipeline and CodeDeploy as well.
https://github.com/aws-samples/aws-cdk-typescript-codepipeline-codeartifact-sample # 
https://github.com/aws-samples/aws-greengrass-cicd # This code repository is used with the CI/CD with AWS Greengrass workshop which can be found here https://greengrass-cicd.workshop.aws
https://github.com/aws-samples/aws-cdk-python-codepipeline-codeartifact-sample # 
https://github.com/aws-samples/aws-refarch-shibboleth # Containerized version of the Shibboleth IdP running on AWS with AWS Secrets Manager and AWS CodePipeline integrations.  You can submit feedback & requests for changes by submitting issues in this repo or by makin
g proposed changes & submitting a pull request.                                                                                                                                                                                                                             https://github.com/aws-samples/multi-region-python-package-publishing-pipeline # This git repository is designed to demonstrate how to build and publish pip packages to CodeArtifact Repositories in Multiple Regions by using CodePipeline and the AWS CDK.
https://github.com/aws-samples/gitops-amazon-ecs-sample # A single pipeline to deploy multiple services on amazon ecs using gitops
https://github.com/aws-samples/rosa-install-codepipeline # AWS CodePipeline to automate installation of PrivateLink STS Red Hat OpenShift Service on AWS (ROSA) clusters
https://github.com/aws-samples/dynamic_hotfix_codepipeline # 
https://github.com/aws-samples/ecs-blue-green-global-deployment-with-multiregion-cmk-codepipeline # Global Blue/Green deployments in multiple regions and accounts for ECS Fargate using AWS Codepipeline and Cloudformation
https://github.com/aws-samples/developing-on-amazon-ecs-with-cloudformation # This sample code show how to develope and deploy applications on Amazon ECS using CloudFormation.
https://github.com/aws-samples/aws-codepipeline-publish-nodejs-modules # Publishing Node.js Modules on AWS CodeArtifact using AWS CodePipeline
https://github.com/aws-samples/aws-cdk-java-codepipeline-codeartifact-sample # 
https://github.com/aws-samples/automate-deployment-and-version-update-of-kda-application # Automate deployment and version updates for Amazon Kinesis Data Analytics applications with AWS CodePipeline
https://github.com/aws-samples/aws-cdk-iac-pipeline-with-cfn-nag # A sample pipeline that allows you to manage your infrastructure via cdk while using the aws multi-account strategy.
https://github.com/aws-samples/invisible-codepipeline-unsupported-regions # End-to-end workflow pipeline where the AWS CodePipeline is not yet supported using existing AWS CI and CD services like AWS CodeCommit, AWS CodeBuild and AWS CodeDeploy.
https://github.com/aws-samples/container-devsecops-using-aws-codepipeline # 
https://github.com/aws-samples/cidr-app-cicd-sam-codepipeline # 
https://github.com/aws-samples/codepipeline-for-lambda-using-cdk-constructs # 
https://github.com/aws-samples/s3-devicefarm-pipeline # The objective of this sample is to help you to build a CI-CD pipeline to test mobile devices using the AWS Devicefarm. The sample makes use of the AWS Codepipeline service to connect build assets published to an 
Amazon S3 bucket to an AWS Devicefarm project. The code pipeline uses AWS CodeBuild for its testing stage to initiate the test runs on Devicefarm and gathers test results. These test results are then published back to an S3 bucket for further processing               https://github.com/awslabs/aws-codepipeline-jenkins-aws-codedeploy_linux # Use this sample when creating a four-stage pipeline in AWS CodePipeline while following the Four Stage Pipeline Tutorial. http://docs.aws.amazon.com/codepipeline/latest/userguide/getting-starte
d-4.html                                                                                                                                                                                                                                                                    https://github.com/awslabs/aws-sam-codepipeline-cd # A serverless app that sets up an AWS CodePipeline pipeline for a given GitHub repo. This app allows people developing SAM applications to quickly get CodePipeline-based CD setup for their project.
https://github.com/awslabs/aws-codepipeline-plugin-for-jenkins # Use this plugin to integrate your Jenkins project with a pipeline in AWS CodePipeline. For more information and step-by-step directions on how to install and configure this plugin, follow the Four Stage 
Pipeline Tutorial. http://docs.aws.amazon.com/codepipeline/latest/userguide/getting-started-4.html                                                                                                                                                                          https://github.com/awslabs/ecs-refarch-continuous-deployment # ECS Reference Architecture for creating a flexible and scalable deployment pipeline to Amazon ECS using AWS CodePipeline
https://github.com/awslabs/ami-builder-packer # An example of an AMI Builder using CI/CD with AWS CodePipeline, AWS CodeBuild, Hashicorp Packer and Ansible.
https://github.com/awslabs/AWSCodePipeline-Jenkins-AWSCodeDeploy_Windows # Use this sample when creating a four-stage pipeline in AWS CodePipeline while following the Four Stage Pipeline Tutorial. http://docs.aws.amazon.com/codepipeline/latest/userguide/getting-starte
d-4.html                                                                                                                                                                                                                                                                    https://github.com/awslabs/aws-codepipeline-custom-job-worker # Use this sample to help you develop your own job worker when creating a custom action for AWS CodePipeline. For more information, see Create a Custom Action for a Pipeline. http://docs.aws.amazon.com/code
pipeline/latest/userguide/how-to-create-custom-action.html                                                                                                                                                                                                                  https://github.com/awslabs/aws-refarch-cross-account-pipeline # The Cloudformation Templates guides the users to setup a codepipeline in Account-A, CodeCommit in Account-B and Deployment of a Sample Lambda in Account-C. Provides a reference for customers to use AWS Co
dePipeline as a centralized product to enable CI/CD across multiple accounts.                                                                                                                                                                                               https://github.com/awslabs/aws-codepipeline-governance # 
https://github.com/awslabs/aws-ms-deploy-assistant # The AWS Deployment Assistance for Microsoft Developer Platform enables integration of the AWS CodePipeline and CodeDeploy Services into the Visual Studio or Team Foundation Server build process

