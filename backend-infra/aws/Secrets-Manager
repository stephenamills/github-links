https://github.com/aws-samples/aws-secrets-manager-rotation-lambdas # Contains Lambda functions to be used for automatic rotation of secrets stored in AWS Secrets Manager
https://github.com/aws-samples/aws-secrets-manager-ssh-key-rotation # Secrets Manager - Lambda rotation function for SSH Keys
https://github.com/aws-samples/aws-secretsmgr-workshop # This repository contains exercises that show how to use AWS Secrets Manager in different scenarios.
https://github.com/aws-samples/amazon-cloudfront-waf-secretsmanager # Enhance Amazon CloudFront Origin Security with AWS WAF and AWS Secrets Manager
https://github.com/aws-samples/aws-lambda-environmental-variables-from-aws-secrets-manager #
https://github.com/aws-samples/aws-lambda-java-oracle-starter-kit # AWS Lambda starter kit for Oracle using Java and AWS Secrets Manager
https://github.com/aws-samples/aws-secrets-manager-secure-database-credentials # Blog sample code: How to securely provide database credentials to Lambda functions by using AWS Secrets Manager
https://github.com/aws-samples/aws-secrets-manager-hybrid-secret-replication-from-hashicorp-vault # Sample repository for secret replication from third-party secrets manager to AWS Secrets Manager
https://github.com/aws-samples/sasl-scram-secrets-manager-client-for-msk #
https://github.com/aws-samples/amazon-cloudfront-signed-urls-using-lambda-secretsmanager # In this example we will provide step-by-step instructions to create Amazon CloudFront Signed URLs with both canned and custom policies using: AWS Lambda as the execution tool; AWS Secrets Manager to manage the private signing key for security best practices; Amazon S3 as a restricted content source.
https://github.com/aws-samples/aws-secrets-manager-cross-account-backup # AWS Secrets Manager Backup will automatically backup secrets to a separate account.
https://github.com/aws-samples/aws-secrets-manager-acm-certificate-rotation #
https://github.com/aws-samples/amazon-ecs-catsndogs-workshop # This is self-paced workshop designed to allow developers and system administrators to get hands on with Amazon Elastic Container Service concepts such as service and container-instance auto-scaling, spot-fleet integration, container placement strategies, service discovery, secrets management with AWS Systems Manager Parameter Store, time-based and event-based scheduling, and automated deployment pipelines.
https://github.com/aws-samples/amazon-elasticache-auth-rbac-rotation # A sample implementation of AWS Secrets Manager custom rotation against an ElastiCache replication group with Auth token authentication.
https://github.com/aws-samples/secret-creator-secrets-manager # The purpose of this project is to enable the creation of multiple secrets in AWS Secrets Manager. It is a AWS Serverless Application Model (SAM) based app. The secrets creation process performs rate limiting to adhere to the published Secrets Manager Rate Quota for the CreateRequest request type. https://github.com/aws-samples/aws-secrets-manager-abac-authorization-samples # This repository is a set of reference CDK templates and client utility to show how to use attribute-based access control (ABAC) authorization to access AWS Secrets Manager secrets from on-premise application using IAM Role Anywhere and on AWS cloud using IAM role from a sample serverless application.
https://github.com/aws-samples/aws-refarch-shibboleth # Containerized version of the Shibboleth IdP running on AWS with AWS Secrets Manager and AWS CodePipeline integrations. You can submit feedback & requests for changes by submitting issues in this repo or by making proposed changes & submitting a pull request.
https://github.com/aws-samples/aws-secrets-manager-rotation-examples # Contains sample code to be used for rotation of secrets stored in AWS Secrets Manager.
https://github.com/aws-samples/aws-cdk-elasticache-redis-iam-rbac # Demonstrates a sample architecture that will allow you to define AWS IAM roles that are mapped to Amazon ElastiCache Redis RBAC users by using AWS Secrets Manager as a proxy to manage access to login credentials.
https://github.com/aws-samples/fabric-sdk-kvs-secretsmanager # A pluggable key value store for storing and retrieving secrets generated by Hyperledger Fabric Client onto AWS Secrets Manager. This can be installed via NPM.
https://github.com/aws-samples/greengrass-v2-secrets-manager-python #
https://github.com/aws-samples/aws-secrets-manager-credential-rotation-without-container-restart #
https://github.com/aws-samples/aws-secrets-manager-jira-integration #
https://github.com/aws-samples/secure-ad-creds-join-unjoin-domain # A sample solution to automate domain join and unjoin process for EC2 Instances with no internet access. The solution uses AWS Secrets Manager to secure the Active Directory credentials and AWS VPC endpoint for accessing the AWS service endpoints used in the solution.
https://github.com/aws-samples/systems-manager-continuous-deployment-automox # Using a combination of Systems Manager State Manager, State Manager Associations, AWS Secrets Manager, and an SSM Document, you can install Automox on Systems Manager Managed EC2 Instances and ensure installation of Automox on all new instances, in an account.
https://github.com/aws-samples/aws-sync-proxy-redshift-users-app # This serverless application handles creation and sync of proxy users in Amazon Redshift and AWS Secrets Manager allowing for table level access control when using the Athena Federated Query SDK.
https://github.com/aws-samples/aws-secrets-manager-helper-cli #
https://github.com/aws-samples/emr-tls-provider-secrets-manager-example #

https://github.com/awslabs/secrets-helper # secrets-helper helps you use AWS Secrets Manager to secure the use of CLI tools

https://github.com/aws/secrets-store-csi-driver-provider-aws # The AWS provider for the Secrets Store CSI Driver allows you to fetch secrets from AWS Secrets Manager and AWS Systems Manager Parameter Store, and mount them into Kubernetes pods.
https://github.com/aws/aws-secretsmanager-jdbc # The AWS Secrets Manager JDBC Library enables Java developers to easily connect to SQL databases using secrets stored in AWS Secrets Manager.
https://github.com/aws/aws-secretsmanager-agent # The AWS Secrets Manager Agent is a local HTTP service that you can install and use in your compute environments to read secrets from Secrets Manager and cache them in memory.
https://github.com/aws/aws-secretsmanager-caching-python # The AWS Secrets Manager Python caching client enables in-process caching of secrets for Python applications.
https://github.com/aws/aws-secretsmanager-caching-java # The AWS Secrets Manager Java caching client enables in-process caching of secrets for Java applications.
https://github.com/aws/aws-secretsmanager-caching-go # The AWS Secrets Manager Go caching client enables in-process caching of secrets for Go applications.
https://github.com/aws/aws-secretsmanager-caching-net # The AWS Secrets Manager .NET caching client enables in-process caching of secrets for .NET applications.
