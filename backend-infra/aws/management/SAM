https://github.com/aws-samples/startup-kit-serverless-workload # An example serverless RESTful API, to be deployed via the AWS Serverless Application Model (SAM).
https://github.com/aws-samples/aws-lambda-layers-aws-sam-examples # This example application shows how to build AWS Lambda Layers using Node.js and the AWS Serverless Application Model.
https://github.com/aws-samples/amazon-ivs-chat-web-demo # A demo web application that shows how to implement a basic video + chat application using the AWS serverless application model (SAM) and Javascript (React).
https://github.com/aws-samples/serverless-lifo-queue-demonstration # A demonstration application which implements a Last-In, First-Out (LIFO) queue, using AWS Lambda, Amazon DynamoDB and other AWS Serverless technologies. The demonstration is an AWS Serverless Application Model (AWS SAM) application and is written in JavaScript.
https://github.com/aws-samples/aws-step-functions-plagiarism-demo-dotnet # A simple workflow for developing AWS Step Functions to demonstrate how you can combine AWS Step Functions with AWS Lambda using .NET 8 and the Serverless Application Model (SAM), and expose your workflow via an API Gateway!
https://github.com/aws-samples/amazon-ivs-chat-for-ios-demo # A demo iOS app built with SwiftUI that shows how to implement a basic video + chat application using Amazon IVS and the AWS serverless application model (SAM).
https://github.com/aws-samples/rag-with-amazon-opensearch-serverless-and-sagemaker # Question Answering Generative AI application with Large Language Models (LLMs) and Amazon OpenSearch Serverless Service
https://github.com/aws-samples/fargate-game-servers # This repository contains an example solution on how to scale a fleet of game servers on AWS Fargate on Elastic Container Service and route players to game sessions using a Serverless backend. Game Server data is stored in ElastiCache Redis. All resources are deployed with Infrastructure as Code using CloudFormation, Serverless Application Model, Docker and bash/powershell scripts. By leveraging AWS Fargate for your game servers you don't need to manage the underlying virtual machines.
https://github.com/aws-samples/amazon-ivs-chat-for-android-demo # A demo Android app built with Kotlin that shows how to implement a basic video + chat application using Amazon IVS and the AWS serverless application model (SAM).
https://github.com/aws-samples/cfct-sam-extension # Simplify infrastructure deployments using Customizations for AWS Control Tower and AWS Serverless Application Model
https://github.com/aws-samples/secret-creator-secrets-manager # The purpose of this project is to enable the creation of multiple secrets in AWS Secrets Manager. It is a AWS Serverless Application Model (SAM) based app. The secrets creation process performs rate limiting to adhere to the published Secrets Manager Rate Quota for the CreateRequest request type.

https://github.com/aws/serverless-application-model # The AWS Serverless Application Model (AWS SAM) transform is a AWS CloudFormation macro that transforms SAM templates into CloudFormation templates.
