https://github.com/aws-solutions-library-samples/guidance-for-self-healing-code-on-aws # This Guidance helps software companies set up a automated system to detect error logs, generate bug fixes, and create pull requests. Helps companies balance addressing bugs while
also competing with product and feature development pressure. https://github.com/aws-solutions-library-samples/guidance-for-digital-thread-using-graph-and-generative-ai-on-aws # This Guidance demonstrates how to create an intelligent manufacturing digital thread through a combination of knowledge graph and generative artificial
intelligence (AI) technologies. A digital thread offers an integrated approach to combine disparate data sources across enterprise systems, increasing traceability, accessibility, collaboration. https://github.com/aws-samples/aws-systems-manager-cloudformation-samples # Set of sample CloudFormation Documents and Systems Manager documents that show how the two service can be used together in deployments.
https://github.com/aws-samples/aws-systems-manager-amazon-ebs-management # Control your AWS costs by deleting unused Elastic Block Store volumes
https://github.com/aws-samples/aws-systemsmanagerautomation-with-asglifecyclehooks # CloudFormation template using Amazon EC2 Auto Scaling Lifecycle Hooks to perform any desired actions before terminating the instance within the Auto Scaling group.
https://github.com/aws-samples/sagemaker-ssh-helper # A helper library to connect into Amazon SageMaker with AWS Systems Manager and SSH (Secure Shell)
https://github.com/aws-samples/aws-systems-manager-schedule-central-patch-example # This repo hosts CloudFormation templates related to the AWS Management & Governance blog post. See README.md for a link to the blog post.
https://github.com/aws-samples/aws-cicd-patch-management-terraform # Software patching with AWS Systems Manager
https://github.com/aws-samples/aws-systems-manager-database-voice-commands # The code represents an Alexa skill, containing the structure of the skill in a JSON file and the code of the related Lambda function in Python.
https://github.com/aws-samples/aws-hpc-recipes # Contains example recipes that demonstrate how to build HPC systems using AWS services and solutions.
https://github.com/aws-samples/aws-cloud9-bootstrapping-example # This example Cloudformation Code Project shows how to bootstrap AWS Cloud9 environments using Cloudformation, AWS Lambda and AWS Systems Manager
https://github.com/aws-samples/systems-manager-centralized-software-distributor #
https://github.com/aws-samples/aws-systems-manager-port-forwarding-for-amazon-elasticache #
https://github.com/aws-samples/aws-config-systems-manager-instance-policy # A solution to deploy AWS Config rules to audit/remediate IAM entities which have AWS Managed Policy AmazonEC2RoleforSSM attached.
https://github.com/aws-samples/aws-systems-manager-executescript-slack #
https://github.com/aws-samples/amazon-ecs-catsndogs-workshop # This is self-paced workshop designed to allow developers and system administrators to get hands on with Amazon Elastic Container Service concepts such as service and container-instance auto-scaling, spot-f
leet integration, container placement strategies, service discovery, secrets management with AWS Systems Manager Parameter Store, time-based and event-based scheduling, and automated deployment pipelines. https://github.com/aws-samples/baseline-environment-on-aws # Baseline Environment on AWS(BLEA) is a set of reference CDK template to establish secure baseline on standalone-account or ControlTower based multi-account AWS environment. This solution provides basic and e
xtensible guardrail with AWS security services and end-to-end sample CDK code for typical system architecture. https://github.com/aws-samples/secured-bastion-host-terraform # This project provides and example of how you can use the combination of AWS Systems Manager Session Manager and Amazon EC2 Instance Connect to securely connect to an Amazon Elastic Compute Cloud (Amazon E
C2) bastion host without exposing any inbound ports to the public internet or using long-lived SSH keys. https://github.com/aws-samples/aws-dynamodb-enterprise-application # A Serverless hotel central reservation System on AWS
https://github.com/aws-samples/aws-systemsmanagerchangecalendar-disablecodepipeline-publicholidays #
https://github.com/aws-samples/aws-systemsmanager-patchcompliance-to-securityhub # CloudFormation template and index.js used to import critical patch compliance findings into AWS Security Hub across multiple accounts
https://github.com/aws-samples/systemsmanager-sql-backup-automation #
https://github.com/aws-samples/aws-systems-manager-custom-inventory-log4j-example #
https://github.com/aws-samples/aws-systems-manager-default-host-management-configuration # This repo hosts CloudFormation templates related to the AWS Cloud Operations blog post. See README.md for a link to the blog post.
https://github.com/aws-samples/aws-systemsmanager-automate-hybrid-activations #
https://github.com/aws-samples/stepfunctions-lambda-ec2-ssm # This repo holds the stepfunction workflow for creating EC2 instance and execute remote powershell script for configuration of EC2 using Systems Manager (Run Command)
https://github.com/aws-samples/systems-manager-masking-solution-microsoft-ad #
https://github.com/aws-samples/systems-manager-continuous-deployment-automox # Using a combination of Systems Manager State Manager, State Manager Associations, AWS Secrets Manager, and an SSM Document, you can install Automox on Systems Manager Managed EC2 Instances
and ensure installation of Automox on all new instances, in an account. https://github.com/aws-samples/systems-manager-license-manager-license-tracker-for-sql-server #
https://github.com/aws-samples/single-use-signed-url # AWS CDK to create a CloudFront distribution with a request Lambda to allow single use signed URL file downloads. Each file is tracked by an identifier which is stored in a DynamoDB database. Each request will chec
k the identifier against values stored in the database. If the identifier is found the file process continues and the files is received, the id is then removed from the database. If the identifier is not found the system will perform a 302 redirect to a specified URL.https://github.com/aws-samples/systems-manager-automation-for-operating-multicloud-workloads #
https://github.com/aws-samples/aws-analytics-immersion-day # Describes the concepts of lambda architecture and the actual deployment process with an example of building a serverless business intelligence systems using Amazon Kinesis, S3, Athena, OpenSearch Service, an
d QuickSight. https://github.com/aws-samples/aws-systems-manager-session-manager-apg-compulsory-session-logging-and-encryption #
https://github.com/aws-samples/industrial-data-store-simulation-chatbot # This code sample deploy a realistic simulated Manufacturing Execution System hosted on SQLite and a companion chatbot application powered by Amazon Bedrock to query data from the MES using natur
al language https://github.com/aws-samples/amazon-fraud-detector-with-cognito # A CDK Application containing Stacks that deploy necessary resources required to implement a real-time fraud detection and prevention system using Amazon Fraud Detector and Amazon Cognito.
https://github.com/aws-samples/ssm-session-manager-limiting-concurrent-sessions # The purpose of this project is to allow System Administrators to limit active concurrent Session Manager (SSM) sessions. This application uses TypeScript to configure the iAM Policy and
Session Manager Preferences; The SSM Preferences include Windows and Linux Shell Profiles which run on the EC2 instance every time a new SSM session is started. Once these scripts execute, they check if concurrent session have been exceeded and terminates the oldest session. https://github.com/aws-samples/amazon-rekognition-custom-labels-a2i-automated-continuous-model-improvement # With Amazon Rekognition Custom Labels, you can easily build and deploy Machine Learning (ML) models to identify custom objects which are specific to your busi
ness domain in images without requiring advanced ML knowledge. When combined with Amazon Augmented AI (A2I), you can quickly integrate a ML workflow to capture and label images with a human workforce for model training. As ML lifecycle is an iterative and repetitive process, you need to implement an effective workflow that can provide for continuous model training with new data and automated deployment. Your workflow also needs to be flexible enough to allow for changes without requiring development rework as your business objectives change. Operationalizing an effective and flexible workflow can be resource intensive, especially for customers who have limited machine learning capabilities. In this post, we will use AWS Step Functions, AWS Lambda, and AWS System Manager Parameter Store to automate a configurable ML workflow for Rekognition Custom Labels and A2I. We will provide an overview of the solution and instructions to deploy it with AWS CloudFormation. https://github.com/aws-samples/vpc-service-catalog-product-infoblox-ipam # A solution that allows customers to create a dedicated VPC in a child account which reaches out to the Infoblox IPAM system to allocate the next available CIDR Block for a region.
https://github.com/aws-samples/aws-systems-manager-folder-recovery #
https://github.com/aws-samples/aws-systems-manager-distribute-ami #
https://github.com/aws-samples/aws-systems-manager-automate-updating-patch-baseline-approve-until-date # This repo hosts CloudFormation templates related to the AWS Cloud Operations blog post. See README.md for a link to the blog post.
https://github.com/aws-samples/amazon-lookout-for-metrics-custom-connectors # A collection of automation aids to connect various database systems into Lookout for Metrics
https://github.com/aws-samples/aws-lambda-ssm-copy-parameters # Created for APG pattern: Cross-Account and Cross-Region Migration of AWS Systems Manager Parameters
https://github.com/aws-samples/aws-appconfig-change-calendar-extn # Sample AWS AppConfig Extension integrating with Systems Manager Change Calendar
https://github.com/aws-samples/aws-realtime-image-analysis # This sample project is a real-time image analysis system. As an image is uploaded, the real-time image analysis system annotates tags on the image using Amazon Rekognition and ingests image tags into Amazon
Elasticsearch for analyzing image labels. https://github.com/aws-samples/efs-samba-ad-integration-for-windows-access # How to access Amazon Elastic File System volumes from Windows hosts using Samba with Active Directory integration
https://github.com/aws-samples/amazon-fsx-for-netapp-ontap-python-client-examples # Examples of serverless file sharing from an Amazon FSx for NetApp ONTAP file system using the Python client library.
https://github.com/awslabs/aws-systems-manager # Artifacts for use with AWS Systems Manager
https://github.com/awslabs/aws-systems-manager-document-generator # A utility to convert your Python or Bash programs into SSM documents (and optionally - CloudFormation templates, containing those documents).
https://github.com/awslabs/speke-reference-server # Secure Packager and Encoder Key Exchange (SPEKE) is part of the AWS Elemental content encryption protection strategy for media services customers. SPEKE defines the standard for communication between our media servic
es and digital rights management (DRM) system key servers. This project provides the basic framework that partners can specialize and extend to support their specific method of Digital Rights Management while utilizing AWS' video streaming solutions. https://github.com/awslabs/visual-asset-management-system # Visual Asset Management System (VAMS) is a purpose-built, AWS native solution for the management and distribution of specialized visual assets used in spatial computing.
https://github.com/aws/secrets-store-csi-driver-provider-aws # The AWS provider for the Secrets Store CSI Driver allows you to fetch secrets from AWS Secrets Manager and AWS Systems Manager Parameter Store, and mount them into Kubernetes pods.
https://github.com/aws/efs-utils # Utilities for Amazon Elastic File System (EFS)

AppConfig
https://github.com/aws-samples/sample-python-helper-aws-appconfig # A Python helper library for AWS AppConfig
https://github.com/aws-samples/aws-appconfig-java-sample # A Sample Java Microservices application to demo the capabilities of Amazon Q Developer agent for Code Transforma
tion. https://github.com/aws-samples/aws-appconfig-feature-flags #
https://github.com/aws-samples/aws-lambda-extensions # A collection of sample extensions to help you get started with AWS Lambda Extensions
https://github.com/aws-samples/aws-appconfig-codepipeline-cdk #
https://github.com/aws-samples/aws-cdk-cicd-boot-sample # This repository contains the infrastructure as code to bootstrap your next CI/CD project. It is developed with se
curity best practices in mind, provides a robust and automated deployment process that utilizes a combination of CDK Stacks primarily written in TypeScript. It also deploys sample Python Lambda functions. https://github.com/aws-samples/personalization-apis # Real-time low latency API framework that sits between your applications and recommender systems such as Amazon Person
alize https://github.com/aws-samples/aws-appconfig-demo # A simple demo showcasing common use cases of AWS AppConfig
https://github.com/aws-samples/Serverless-Retrieval-Augmented-Generation-RAG-on-AWS # A full-stack serverless RAG workflow. This is thought for running PoCs, prototypes an
d bootstrap your MVP. https://github.com/aws-samples/aws-appconfig-with-quarkus # This repository shows how to natively extend Quarkus with a custom ConfigSource to use AWS AppConfig values whe
n injecting config properties with @ConfigProperty. https://github.com/aws-samples/eventdriven-frontend-patterns # Sample code accompanying Goto EDA Day 2024 talk - Patterns for building event-driven web and mobile app back
ends https://github.com/aws-samples/quant-trading #
https://github.com/aws-samples/leveraging-aws-appconfig-for-enabling-saas-pricing-tiers #
https://github.com/aws-samples/amazon-sagemaker-built-in-algorithms-mlops-pipeline-using-aws-cdk # MLOps Pipeline Using SageMaker & CDK, where models are from SageMaker bu
ilt-in algorithms. https://github.com/aws-samples/aws-ecs-devops-using-aws-cdk # This repository provides a general DevOps practices such MSA, IaC, CICD and Monitoring. AWS various services
are used to provide DevOps best practices. https://github.com/aws-samples/aws-lookoutforvision-sap-integration # Integrate AWS Lookout for vision with SAP Quality Management Process
https://github.com/aws-samples/aws-appconfig-git-secrets-extn # Sample AWS AppConfig Extension bundling git-secrets for secret detection
https://github.com/aws-samples/aws-appconfig-pii-extn # Sample AWS AppConfig Extension integrating with Amazon Comprehend for PII detection
https://github.com/aws-samples/aws-appconfig-change-calendar-extn # Sample AWS AppConfig Extension integrating with Systems Manager Change Calendar
https://github.com/aws-samples/sap-on-aws-documentprocessing-workflow #
https://github.com/aws-samples/migration-effort-estimator #
https://github.com/aws-samples/aws-cdk-deploy-pipeline-using-aws-codepipeline # This repository describes how to customize AWS CodePipeline to deploy AWS CDK application.
https://github.com/aws-samples/spinnaker-keel-on-eks #
https://github.com/aws-samples/llm-app-genie #
https://github.com/aws-samples/multi-tenancy-blog-post-collection #
https://github.com/awslabs/llrt # LLRT (Low Latency Runtime) is an experimental, lightweight JavaScript runtime designed to address the growing demand for fast and efficie
nt Serverless applications. https://github.com/awslabs/visual-search # Visual search implementation resources, including an explanatory Jupyter notebook and Amazon SageMaker and AWS DeepLens code.
https://github.com/aws/aws-dotnet-extensions-configuration # This repository hosts various libraries that help developers configure .NET applications using AWS services.
