https://github.com/aws-solutions-library-samples/guidance-for-custom-search-of-an-enterprise-knowledge-base-with-amazon-opensearch-service # Build an application for search based on the information in an enterprise knowledge base through the deployment of interface nodes, including large language models (LLMs).
https://github.com/aws-solutions-library-samples/guidance-for-real-time-text-search-using-amazon-opensearch-service # Integrate Amazon DynamoDB with Amazon OpenSearch Service to enable real-time search
https://github.com/aws-solutions-library-samples/guidance-for-product-substitutions-on-aws # This Guidance demonstrates how retailers can use Amazon OpenSearch Service, in combination with natural language processing, to create digital recommendations when needing to replace out-of-stock store products.
https://github.com/aws-solutions-library-samples/guidance-for-integrated-scalable-search-for-amazon-documentdb # Run advanced search and analytics on Amazon DocumentDB data using Amazon OpenSearch Service.

https://github.com/build-on-aws/pdf-powered-chatbot-using-llama2-opensearch #
https://github.com/build-on-aws/getting-started-with-opensearch-models #
https://github.com/build-on-aws/custom-provider-with-terraform-plugin-framework # This repository contains a complete implementation of a custom provider built using HashiCorp's latest SDK called Terraform plugin framework.
https://github.com/build-on-aws/realtime-dynamodb-zero-etl-opensearch-visualization # In the fast-paced world of data-driven decision making, real-time insights are crucial for staying ahead of the competition. Amazon OpenSearch Service and Amazon DynamoDB offer a powerful combination that enables organizations to visualize and analyze data in near real-time, without the need for complex Extract, Transform, Load (ETL) processes
https://github.com/build-on-aws/opensearch-using-kafka-golang # Ingesting Data into OpenSearch using Apache Kafka and Go

https://github.com/aws-samples/siem-on-amazon-opensearch-service # A solution for collecting, correlating and visualizing multiple types of logs to help investigate security incidents.
https://github.com/aws-samples/observability-with-amazon-opensearch # This repository contains a microservice-based Sample App demonstrating observability capabilities in the Amazon OpenSearch Service.
https://github.com/aws-samples/semantic-search-with-amazon-opensearch #
https://github.com/aws-samples/rag-using-langchain-amazon-bedrock-and-opensearch # RAG with langchain using Amazon Bedrock and Amazon OpenSearch
https://github.com/aws-samples/opensearch-in-vpc # Terraform module for deploying Amazon OpenSearch Service domain inside VPC
https://github.com/aws-samples/generative-bi-using-rag # A solution guidance for Generative BI using Amazon Bedrock, Amazon OpenSearch with RAG
https://github.com/aws-samples/amazon-opensearch-service-monitor # This repository contains step by step demonstration to setup monitoring Stack for Amazon OpenSearch Service domains across all specified regions. This example uses AWS CDK and Python.
https://github.com/aws-samples/opensearch-bootful # SpringBoot OpenSearch Integration examples
https://github.com/aws-samples/ai-search-with-amazon-opensearch-service #
https://github.com/aws-samples/retail-demo-store # AWS Retail Demo Store is a sample retail web application and workshop platform demonstrating how AWS infrastructure and services can be used to build compelling customer experiences for eCommerce, retail, and digital marketing use-cases
https://github.com/aws-samples/serverless-rag-demo # Amazon Bedrock Anthropic Claude, (Llama2-7B/13B/70B /Falcon-7B/40B/180B on Amazon Sagemaker) LLMs with Amazon Opensearch Serverless as a Vector DB
https://github.com/aws-samples/opensearch-log-rotate-with-curator-opensearch # This project is a sample code on how to use opensearch-curator in order to log rotate your Amazon OpenSearch domain. It was built using sam-cli for easy deployment.
https://github.com/aws-samples/llm-apps-workshop # Use LLMs for building real-world apps
https://github.com/aws-samples/amazon-sagemaker-clip-search # Build a machine learning (ML) powered search engine prototype to retrieve and recommend products based on text or image queries
https://github.com/aws-samples/aws-cross-region-elasticsearch-backup-restore # AWS Cross Region OpenSearch Backup Restore
https://github.com/aws-samples/amazon-qldb-streaming-amazon-opensearch-service-sample-python # Amazon QLDB Streams integration with Amazon Elasticsearch
https://github.com/aws-samples/serverless-semantic-video-search-vector-database-and-a-multi-modal-generative-al-embeddings-model # Implementing serverless semantic search of image and live video with Amazon OpenSearch and Amazon Bedrock
https://github.com/aws-samples/opensearch-serverless-common-usage-patterns # Typical use cases of opensearch serverelss: search, time-series, kinesis firehose integration, securing with VPC
https://github.com/aws-samples/amazon-opensearch-service-sample-cdk #
https://github.com/aws-samples/change-data-capture-mysql-opensearch #Code to set up CDC applications Enable change data capture on RDS for MySQL applications that are using XA transactions blog post
https://github.com/aws-samples/aws-genai-llm-chatbot # A modular and comprehensive solution to deploy a Multi-LLM and Multi-RAG powered chatbot (Amazon Bedrock, Anthropic, HuggingFace, OpenAI, Meta, AI21, Cohere, Mistral) using AWS CDK on AWS
https://github.com/aws-samples/rag-with-amazon-opensearch-and-sagemaker # Question Answering Generative AI application with Large Language Models (LLMs) and Amazon OpenSearch Service
https://github.com/aws-samples/amazon-opensearch-batch-indexing-with-aws-lambda #
https://github.com/aws-samples/aws-dms-cdc-data-pipeline # Data Pipeline for CDC data from MySQL DB to Amazon OpenSearch Service through Amazon Kinesis using Amazon Data Migration Service(DMS).
https://github.com/aws-samples/amazon-connect-real-time-opensearch #
https://github.com/aws-samples/tabular-column-semantic-search # Code accompanying AWS blog post "Build a Semantic Search Engine for Tabular Columns with Transformers and Amazon OpenSearch Service"
https://github.com/aws-samples/neptune-fraud-detection-with-opensearch #
https://github.com/aws-samples/opensearch-intelligent-search-jp #
https://github.com/aws-samples/rag-with-amazon-opensearch-serverless-and-sagemaker # Question Answering Generative AI application with Large Language Models (LLMs) and Amazon OpenSearch Serverless Service
https://github.com/aws-samples/opensearch-vpc-cdk # This is a sample implementation for Amazon OpenSearch Service deployed in VPC with CDK (TypeScript).
https://github.com/aws-samples/rag-with-amazon-bedrock-and-opensearch # Opinionated sample on how to build and deploy a RAG application with Amazon Bedrock and OpenSearch
https://github.com/aws-samples/aws-opensearch-ingestion-tutorials # This sample codes show how to ingest data into Amazon OpenSearch or OpenSearch Serverless using OpenSearch Ingestion. Amazon OpenSearch Ingestion is a kind of alternative for OpenSource Logstash or Amazon Kinesis Data Firehose.
https://github.com/aws-samples/aws-analytics-immersion-day # Describes the concepts of lambda architecture and the actual deployment process with an example of building a serverless business intelligence systems using Amazon Kinesis, S3, Athena, OpenSearch Service, and QuickSight.
https://github.com/aws-samples/generative-ai-cdk-constructs-samples # This repo provides sample generative AI stacks built atop the AWS Generative AI CDK Constructs.
https://github.com/aws-samples/aws-s3-to-opensearch-pipeline #
https://github.com/aws-samples/near-realtime-aws-usage-anomaly-detection # Detect AWS usage anomalies in near-real time using OpenSearch Anomaly Detection and CloudTrail for improved cost management and security
https://github.com/aws-samples/aws-real-time-web-shop-analytics # Real-time web shop streaming analytics on AWS
https://github.com/aws-samples/amazon-opensearchserverless-searchapp #
https://github.com/aws-samples/centralized-logging-with-opensearch-workshop # The hands-on workshop ofCentralized Logging with OpenSearch solution.
https://github.com/aws-samples/cloudwatch-to-opensearch # Sample code to demonstrate ingestion of Amazon CloudWatch logs into Amazon OpenSearch Serverless
https://github.com/aws-samples/personalized-search-results-from-opensearch #
https://github.com/aws-samples/observability-with-amazon-opensearch-blog #
https://github.com/aws-samples/rag-chatbot-with-bedrock-opensearch-and-document-summaries-in-govcloud #
https://github.com/aws-samples/amazon-opensearch-movies-app # Building a search application with Amazon OpenSearch Service
https://github.com/aws-samples/opensearch-dense-spase-retrieval #
https://github.com/aws-samples/hybrid-search-postgres-opensearch-bedrock #
https://github.com/aws-samples/amazon-opensearch-extension-for-elasticsearch #
https://github.com/aws-samples/aws-genai-rfpassistant # This repository contains the code and infrastructure as code for a Generative AI-powered Request for Proposal (RFP) Assistant leveraging Amazon Bedrock and AWS Cloud Development Kit (CDK).
https://github.com/aws-samples/protein-similarity-search # This repository contains code and notebooks detailing a protein similarity search solution using the ProtT5-XL-UniRef50 model, Amazon OpenSearch Service, and Amazon SageMaker.
https://github.com/aws-samples/visual-search-for-retail-with-amazon-bedrock-and-amazon-opensearch-notebooks #
https://github.com/aws-samples/amazon-opensearch-kibana-dashboards #
https://github.com/aws-samples/emr-logs-in-opensearch #
https://github.com/aws-samples/amazon-keyspaces-opensearch-integration #
https://github.com/aws-samples/multi-modal-chatbot-with-advanced-rag # Amazon Bedrock Q&A multi-modal chatbot with advanced RAG
https://github.com/aws-samples/amazon-managed-service-for-apache-flink-taxi-consumer # Sample Apache Flink application that can be deployed to Amazon Managed Service for Apache Flink. It reads taxi events from a Kinesis data stream, processes and aggregates them, and
ingests the result to an Amazon OpenSearch Service cluster for visualization with Dashboard.
https://github.com/aws-samples/deep-visual-search-workshop-infra # Workshop CDK Template to provision infra for the Deep Visual Search workshop
https://github.com/aws-samples/deep-visual-search-workshop # Workshop to create a visual search engine using Amazon SageMaker and Amazon OpenSearchService
https://github.com/aws-samples/bedrock-agent-carpart-lookup # A smart, conversational interface for automotive part queries. Leverages Amazon Bedrock and OpenSearch to provide accurate part information, compatibility checks, and detailed responses. Streamlines the pro
cess of finding and verifying car parts for owners and mechanics.
https://github.com/aws/aws-sdk-pandas # pandas on AWS - Easy integration with Athena, Glue, Redshift, Timestream, Neptune, OpenSearch, QuickSight, Chime, CloudWatchLogs, DynamoDB, EMR, SecretManager, PostgreSQL, MySQL, SQLServer and S3 (Parquet, CSV, JSON and EXCEL).

https://github.com/aws-samples/amazon-elasticsearch-lambda-samples # Data ingestion for Amazon Elasticsearch Service from S3 and Amazon Kinesis, using AWS Lambda: Sample code
https://github.com/aws-samples/opsworks-elasticsearch-cookbook # AWS OpsWorks Elasticsearch sample cookbook
https://github.com/aws-samples/amazon-elasticsearch-intro-workshop # Amazon Elasticsearch Service workshop for beginners.
https://github.com/aws-samples/amazon-elasticsearch-service-with-cognito # Launch Amazon Elasticsearch Service with Amazon Cognito User Pools.
https://github.com/aws-samples/amazon-elasticsearch-service-with-authentication # Secure Amazon ElasticSearch with AD/LDAP based Authentication & Authorization
https://github.com/aws-samples/amazon-elasticsearch-kibana-proxy #
https://github.com/aws-samples/workshop-textract-comprehend-es # Workshop: Index your pile of papers with Amazon Textract, Amazon Comprehend and Amazon Elasticsearch Service
https://github.com/aws-samples/accelerated-data-lake # A packaged Data Lake solution, that builds a highly functional Data Lake, with a data catalog queryable via Elasticsearch
https://github.com/aws-samples/flink-stream-processing-refarch # Reference architecture for real-time stream processing with Apache Flink on Amazon EMR, Amazon Kinesis, and Amazon Elasticsearch Service.
https://github.com/aws-samples/amazon-textract-enhancer # This workshop demonstrates how to build a Document parser and query engine with Amazon Textract and other services, such as ElasticSearch and DynamoDB.
https://github.com/aws-samples/amazon-qldb-streaming-amazon-opensearch-service-sample-python # Amazon QLDB Streams integration with Amazon Elasticsearch
https://github.com/aws-samples/aws-iot-greengrass-v2-using-aws-cdk # aws greengrass version2 based realtime data ingestion - all resources are created by aws cdk
https://github.com/aws-samples/amazon-es-check-cw-alarms # This sample code checks, and optionally creates, recommended CloudWatch alarms for your Amazon Elasticsearch service domain.
https://github.com/aws-samples/aws-cross-region-elasticsearch-backup-restore # AWS Cross Region OpenSearch Backup Restore
https://github.com/aws-samples/aws-big-data-blog-analyze-s3-access-log-using-amazon-elasticsearch #
https://github.com/aws-samples/amazon-kinesis-analytics-taxi-consumer # Sample Apache Flink application that can be deployed to Kinesis Analytics for Java. It reads taxi events from a Kinesis data stream, processes and aggregates them, and ingests the result to an Amazon Elasticsearch Service cluster for visualization with Kibana.
https://github.com/aws-samples/building-a-realtime-data-platform-workshop # A self-paced workshop designed to allow you to get hands on with building a real-time data platform using serverless technologies such as Kinesis Firehose, AWS Lambda and Amazon Elasticsearch.
https://github.com/aws-samples/amazon-sagemaker-nlu-search # This repository is part of a blog post that guides users through creating a NLU search application using Amazon SageMaker and Amazon Elasticsearch service
https://github.com/aws-samples/amazon-transcribe-comprehend-podcast # A demo application that transcribes and indexes podcast episodes so the listeners can explore and discover episodes of interest and podcast owners can do analytics on the content over time. This solution leverages Amazon Transcribe, Amazon Comprehend, Amazon ElasticSearch AWS Step Functions and AWS Lambda.
https://github.com/aws-samples/aws-cdk-managed-elkk # Managed ELKK stack implemented with the AWS CDK
https://github.com/aws-samples/searchengine-with-appsync-dynamodb-elasticsearch #
https://github.com/aws-samples/aws-multi-account-inspector-to-es-s3-blogpost-2020 # AWS Cloudformation templates and python codes for security blog post on How to centralize and visualize multi-account Amazon Inspector findings with Amazon Elasticsearch and Amazon S3
https://github.com/aws-samples/aws-visual-content-recommender # visual content recommender/search to search similar images using Amazon SageMaker and Amazon Elasticsearch
https://github.com/aws-samples/amazon-sagemaker-visual-search # This repository is part of a blog post that guides users through creating a visual search application using Amazon SageMaker and Amazon Elasticsearch service
https://github.com/aws-samples/power-transformers-iot-kinesis-elasticsearch # CDK to deploy a sample IoT application that collects data from Distribution Power Transformers and provides near real-time dashboards.
https://github.com/aws-samples/unified-log-aggregation-and-analytics # The proposed solution shows and approach to unify and centralize logs across different compute platforms like EC2, ECS, EKS and Lambda with Kinesis Data Firehose using log collection agents (EC2 Kinesis agent), log routers (Fluentbit and Firelens) and lambda extension. We can easily deploy the solution presented here on the customer site using the CDK scripts packaged part of this article. Amazon managed Elastic search with Kibana is used to visualize the logs collected across different applications running on different compute platforms.
https://github.com/aws-samples/aws-realtime-image-analysis # This sample project is a real-time image analysis system. As an image is uploaded, the real-time image analysis system annotates tags on the image using Amazon Rekognition and ingests image tags into Amazon Elasticsearch for analyzing image labels.

https://github.com/awslabs/logstash-output-amazon_es # Logstash output plugin to sign and export logstash events to Amazon Elasticsearch Service
https://github.com/awslabs/aws-detailed-billing-parser # Python script to parse the Detailed Billing Reports to Elasticsearch or .json file.
https://github.com/awslabs/cloudwatch-logs-analyze-data # A Lambda function that builds an on-demand, scalable Amazon Elasticsearch cluster to solve a specific problem or to do analysis.
