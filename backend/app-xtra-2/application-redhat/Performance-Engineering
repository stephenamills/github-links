https://github.com/redhat-performance/tuned # Tuning Profile Delivery Mechanism for Linux
https://github.com/redhat-performance/docker-dpdk # Containerized DPDK
https://github.com/redhat-performance/badfish # Vendor-agnostic tool for managing bare-metal systems via the Redfish API
https://github.com/redhat-performance/quads # :calendar: The infrastructure deployment time machine
https://github.com/redhat-performance/ops-tools # Tool Repo for Scale Lab Operations Team
https://github.com/redhat-performance/docker-performance # Docker Performance
https://github.com/redhat-performance/satperf # Collection of Automation/Tools for Performance Analysis/Testing of Satelite 6
https://github.com/redhat-performance/jetlag # Automation to deploy Bare-metal OpenShift leveraging the Assisted-Installer
https://github.com/redhat-performance/openshift-performance # OpenShift, Kubernetes and Docker Performance Research
https://github.com/redhat-performance/jetpack # Automated deployment of OpenStack in Red Hat's Labs
https://github.com/redhat-performance/libmicro # A fork of the Sun (Oracle) Solaris based libMicro 0.4.1; see 0.4.1-rh branch.
https://github.com/redhat-performance/benchmark-runner # Containerized Python based Framework for running and visualizing benchmark wo
rkloads on any Kubernetes/ OpenShift and runtime kinds pods, kata containers and kubevirt virtual machines simply and safely https://github.com/redhat-performance/openshift-psap # Example roles and yaml files for performance-sensitive applications running on
OpenShift https://github.com/redhat-performance/cloud-governance # The Next generation of cloud management and security
https://github.com/redhat-performance/openstack-templates # Repository of OpenStack Templates for Scale Lab Use
https://github.com/redhat-performance/satellite-tune # Anisble playbooks for Satellite performance/scale tunings
https://github.com/redhat-performance/cluster-impairment-operator # Used to impair nodes in a cluster for testing the limits of a Kube
rnetes/OpenShift cluster. https://github.com/redhat-performance/satellite-monitoring # Monitor Red Hat satelitte & capsule servers
https://github.com/redhat-performance/ansible-tuned # Ansible-playbook for Tuned
https://github.com/redhat-performance/boatload # Workloads for OpenShift/Kubernetes clusters
https://github.com/redhat-performance/opl # MBU Products perf&scale library
https://github.com/redhat-performance/web-burner #
https://github.com/redhat-performance/odf-grafana # Playbook and dashboards to help with ODF performance analysis
https://github.com/redhat-performance/scale-ci-ansible # The Scale CI automation Ansible playbooks
https://github.com/redhat-performance/mccloud # Deploy Tripleo Under/Over Cloud onto Microcloud/ScaleLab Hardware
https://github.com/redhat-performance/webfuse #
https://github.com/redhat-performance/speccpu2017-wrapper # Automated wrapper for speccpu2017
https://github.com/redhat-performance/zathras # Zathras is an automation framework built in 5 layers. It is designed to be easily ext
endable to other cloud types, works on bare metal systems, and have new tests easily added to it. https://github.com/redhat-performance/neutron-trace-profiler # Neutron function call trace profiler
https://github.com/redhat-performance/rhhi-manifest #
https://github.com/redhat-performance/osbs-performance # OpenShift Build Service Performance
https://github.com/redhat-performance/backstage-performance # backstage performance & scale
https://github.com/redhat-performance/specjbb-wrapper # wrapper for specjbb. Actual specjbb kit is provided by user.
https://github.com/redhat-performance/scalelab-sriov-prep # Ansible role to alter BIOS setting on SRIOV capable NICs
https://github.com/redhat-performance/phoronix-wrapper # phoronix automated wrapper
https://github.com/redhat-performance/scale-ci-tripleo # An ansible role to pull large scale baremetal into the standard CI system for
TripleO https://github.com/redhat-performance/passmark-wrapper # wrapper for passmark workload
https://github.com/redhat-performance/tooling-curator #
https://github.com/redhat-performance/wppt # Webhook Payload Proxy Transformer
https://github.com/redhat-performance/bioschecker #
https://github.com/redhat-performance/uperf-wrapper # uperf wrapper
https://github.com/redhat-performance/hyperledger-performance #
https://github.com/redhat-performance/pbench-analyzer # CI-friendly tools for analyzing and comparing data gathered by pbench
https://github.com/redhat-performance/faro #
https://github.com/redhat-performance/coremark-wrapper # Wrapper for coremark test
https://github.com/redhat-performance/yoda #
https://github.com/redhat-performance/perfci-vars #
https://github.com/redhat-performance/ibm_cloud_tower_deploy #
https://github.com/redhat-performance/vdpod # vdpo
https://github.com/redhat-performance/arcaflow-plugin-kube-burner #
https://github.com/redhat-performance/redfish-crawler # The Redfish Crawler is a python standalone cli tool for generating a folder st
ructure with all of it's json responses for all available endpoint on a server's own [Redfish](https://www.dmtf.org/standards/redfish) implementation. https://github.com/redhat-performance/aimlperf_reg_tests #
https://github.com/redhat-performance/pulpperf #
https://github.com/redhat-performance/hammerdb-wrapper # hammerdb automated wrapper
https://github.com/redhat-performance/satperf-fake-client # Containers with sshd running in them meant to be used in Satellite perf&sc
ale testing as a fake live clients https://github.com/redhat-performance/math-library-optimizations # Repository for optimizing low-level math libraries
https://github.com/redhat-performance/kibana_objects_tool # Tool to work with Kibana saved objects so we can keep them in git
https://github.com/redhat-performance/perfci #
https://github.com/redhat-performance/fio-wrapper # fio automated wrapper
https://github.com/redhat-performance/streams-wrapper # wrapper for streams
https://github.com/redhat-performance/autohpl-wrapper # autohpl automated wrapper
https://github.com/redhat-performance/cost-mgmt-perf # This project is add profiling to cost management service
https://github.com/redhat-performance/wrapper_coding_standards #
https://github.com/redhat-performance/jetstack # Jetstack is used for deploying OSP using director on IBM cloud
https://github.com/redhat-performance/iozone-wrapper # iozone wrapper
https://github.com/redhat-performance/scale-ci-results # Results from Scale CI runs used for run-to-run comparison
https://github.com/redhat-performance/ansible-role-add_prometheus_target # Ansible role to to manipulate our Prometheus deployment scr
ape targets https://github.com/redhat-performance/data-dynamo # Dataset for the PerfConf 2024 Hackathon
https://github.com/redhat-performance/pig_wrapper #
https://github.com/redhat-performance/arcaflow-plugins #
https://github.com/redhat-performance/pyperf-wrapper # wrapper for pyperformance
https://github.com/redhat-performance/scale-ci-upgrade # Contains automation for automatically testing upgrades
https://github.com/redhat-performance/numa_streams-wrapper # Numa streams wrapper using https://github.com/larsbergstrom/NUMA-STREAM
https://github.com/redhat-performance/rhoso-templates # placeholder for all the RHOSO templates for all the scale lab machines
https://github.com/redhat-performance/ansible-role-deploy_exporter #
https://github.com/redhat-performance/mirror-dir # Tool to mirror HTTP directory
https://github.com/redhat-performance/etcd-wrapper #
https://github.com/redhat-performance/arcaflow-workflows #
https://github.com/redhat-performance/stack_times # Tool using bpftrace to provide a timing of each function in a stack.
https://github.com/redhat-performance/test_tools-wrappers # Tools used by the test wrappers.
https://github.com/redhat-performance/perfscale-utils # Repository to store utility tools and scripts used by Performance & Scale team
s https://github.com/redhat-performance/linpack-wrapper # linpack-wrapper
https://github.com/redhat-performance/git-http-smart-hosting # Repo for container capable of hosting git repo via smart http protocol
https://github.com/redhat-performance/perf-scale-busted #
https://github.com/redhat-performance/scale-tools #
https://github.com/redhat-performance/reboot_measurement # Measure reboot times (mainly for cloud systems)
https://github.com/redhat-performance/coremark_pro-wrapper # core mark benchmark wrapper
https://github.com/redhat-performance/zathras_test_configs # zathras_test_configs
https://github.com/redhat-performance/io_burst-wrapper #
