Deepset
https://github.com/deepset-ai/haystack # AI orchestration framework to build customizable LLM applications. Connect components (models, vector DBs, file converters) to pipelines or agents that can interact with your data.

https://github.com/deepset-ai/haystack-cookbook # üë©üèª‚Äçüç≥ A collection of example notebooks
https://github.com/deepset-ai/covid-qa # API & Webapp to answer questions about COVID-19. Using NLP (Question Answering) and trusted data sources.
https://github.com/deepset-ai/haystack-demos # Fully working applications that demonstrate how to use Haystack to implement common NLP use cases
https://github.com/deepset-ai/rag-with-nvidia-nims # üöÄ Use NVIDIA NIMs with Haystack pipelines
https://github.com/deepset-ai/rag-ui-nextjs # An example of a simple UI for a deepset Cloud RAG pipeline using Next.js
https://github.com/deepset-ai/haystack-tutorials # Here you can find all the Tutorials for Haystack üìì

https://github.com/deepset-ai/prompthub #
https://github.com/deepset-ai/haystack-core-integrations # Additional packages (components, document stores and the likes) to extend the capabilities of Haystack version 2.0 and onwards
https://github.com/deepset-ai/haystack-integrations # üöÄ A list of Haystack Integrations, maintained by the community or deepset.
https://github.com/deepset-ai/hayhooks # Deploy Haystack pipelines behind a REST Api.
https://github.com/deepset-ai/haystack-search-pipeline-streamlit # üöÄ Template Haystack Search Application with Streamlit
https://github.com/deepset-ai/haystack-experimental # üß™ Experimental features for Haystack
https://github.com/deepset-ai/haystack-sagemaker # üöÄ This repo is a showcase of how you can use models deployed on AWS SageMaker in your Haystack Retrieval Augmented Generative AI pipelines
https://github.com/deepset-ai/deepset-cloud-sdk # A Python SDK to interact with deepset Cloud
https://github.com/deepset-ai/biqa-llm #
https://github.com/deepset-ai/document-store #
https://github.com/deepset-ai/haystack-evaluation # Using Haystack to benchmark different architectures over different datasets
https://github.com/deepset-ai/visualizer-source-text # Source text for deepset Cloud pipeline nodes
https://github.com/deepset-ai/prompthub-py #
https://github.com/deepset-ai/haystack-json-schema # JSON Schema for validating Haystack Pipeline YAML files
https://github.com/deepset-ai/.github #

Massive Text Embedding Benchmark
https://github.com/embeddings-benchmark/mteb # MTEB: Massive Text Embedding Benchmark
https://github.com/embeddings-benchmark/mtebpaper # Resources & scripts for the paper "MTEB: Massive Text Embedding Benchmark"
https://github.com/embeddings-benchmark/arena # Code for the MTEB Arena
https://github.com/embeddings-benchmark/leaderboard # Code for the MTEB leaderboard
https://github.com/embeddings-benchmark/results # Data for the MTEB leaderboard

Mixedbread AI
https://github.com/mixedbread-ai/baguetter # Search engine library that supports sparse (traditional), dense (semantic), and hybrid retrieval methods.
https://github.com/mixedbread-ai/batched #
https://github.com/mixedbread-ai/binary-embeddings # Showcase how mxbai-embed-large-v1 can be used to produce binary embedding. Binary embeddings enabled 32x storage savings and 40x faster retrieval.
https://github.com/mixedbread-ai/wiki_demo_app #
https://github.com/mixedbread-ai/ofen # WIP: Ofen is a toolkit aimed at making transformer models production-ready. API included
https://github.com/mixedbread-ai/python-sdk # mixedbread ai python sdk
https://github.com/mixedbread-ai/mixedbread-ai-haystack #
https://github.com/mixedbread-ai/typescript-sdk #
https://github.com/mixedbread-ai/langchain-mixedbread-ai #

Neuml
https://github.com/neuml/txtai # üí° All-in-one open-source embeddings database for semantic search, LLM orchestration and language model workflows
https://github.com/neuml/paperai # üìÑ ü§ñ Semantic search and workflows for medical/scientific papers
https://github.com/neuml/codequestion # üîé Semantic search for developers
https://github.com/neuml/tldrstory # üìä Semantic search for headlines and story text
https://github.com/neuml/paperetl # üìÑ ‚öôÔ∏è ETL processes for medical and scientific papers
https://github.com/neuml/txtchat # üí≠ Retrieval augmented generation (RAG) and language model powered search applications
https://github.com/neuml/rag # üöÄ Retrieval Augmented Generation (RAG) with txtai. Combine search and LLMs to find insights with your own data.
https://github.com/neuml/txtinstruct # üìö Datasets and models for instruction-tuning
https://github.com/neuml/txtai.js # JavaScript client for txtai
https://github.com/neuml/txtai.rs # Rust client for txtai
https://github.com/neuml/txtmarker # Highlight text in documents
https://github.com/neuml/txtai.go # Go client for txtai
https://github.com/neuml/txtai.java # Java client for txtai
https://github.com/neuml/webelapse # Generate time-lapse video for a website
https://github.com/neuml/py27hash # Python 2.7 hashing and iteration in Python 3+
https://github.com/neuml/neuspo # üèà Fact-driven, real-time sports event and news site
https://github.com/neuml/txtai.py # Python client for txtai
https://github.com/neuml/kernelpipes # Run Kaggle kernel pipeline jobs
https://github.com/neuml/.github # Default community files for all NeuML projects

Perplexity

Trieve
https://github.com/devflowinc/trieve # All-in-one infrastructure for search, recommendations, RAG, and analytics offered via API

https://github.com/devflowinc/hn-search-rag # Hacker News Search and RAG built using Rust actix-web, minijinja, SolidJS, Vite, and Redis queue's
https://github.com/devflowinc/firecrawl-to-trieve # Demonstration of a Firecrawl-to-Trieve crawling-to-search pipeline.
https://github.com/devflowinc/yc-companies # YC companies example built on Trieve
https://github.com/devflowinc/article-summarizer #
https://github.com/devflowinc/youtube-transcribe # Upload chunks from a Youtube Channel's videos to an Arguflow instance
https://github.com/devflowinc/documentation #
https://github.com/devflowinc/live-debate # Arguflow's Decentralized Peer to Peer arguing application built on Nostr
https://github.com/devflowinc/producthunt-ruby-example # POC for powering ProductHunt search, recommendations, and RAG
https://github.com/devflowinc/blog #
https://github.com/devflowinc/trieve-docs #
https://github.com/devflowinc/ch-migrations #
https://github.com/devflowinc/clickhouse-vs-qdrant-comparison #
https://github.com/devflowinc/trieve-instantsearch-adapter #
https://github.com/devflowinc/royal-road-embeddings #
https://github.com/devflowinc/trieve-cli #
https://github.com/devflowinc/try-it-with-trieve # Chromium extension to add a "Try it with Trieve!" button on selected websites.
https://github.com/devflowinc/nostr-browser #
https://github.com/devflowinc/trieve-py-client # Python client for Trieve
https://github.com/devflowinc/philosophize-this #
https://github.com/devflowinc/ecommerce-reviews-rag # Open Source Amazon Rufus inspired RAG chat over customer reviews
https://github.com/devflowinc/testing-scripts #
https://github.com/devflowinc/docs #
https://github.com/devflowinc/trieve_python_client #
https://github.com/devflowinc/actix-web-starter #
https://github.com/devflowinc/openapi-search #
https://github.com/devflowinc/trieve-hn-comparison #
https://github.com/devflowinc/trieve-js-ts-client #
https://github.com/devflowinc/gymshark-scrape #
https://github.com/devflowinc/solidjs-search-rag-starter # Starter template for building Search and RAG in SolidJS with Trieve
https://github.com/devflowinc/pg_bm25_fork # postgres extension for bm25
https://github.com/devflowinc/mintlify-ingest #
https://github.com/devflowinc/embedding-performance # Testing tps for embeddding servers
https://github.com/devflowinc/examples # Examples for using Trieve
https://github.com/devflowinc/trieve-java-client #
https://github.com/devflowinc/af-python-client #
https://github.com/devflowinc/enron-upload #
https://github.com/devflowinc/trieve-examples #
https://github.com/devflowinc/hn_datasets #
https://github.com/devflowinc/trieve-dotnet-client #
https://github.com/devflowinc/llm-docs-rs #
https://github.com/devflowinc/monorepo # Monorepo for all Node.js code that runs Debate Land.
https://github.com/devflowinc/trieve_law_example #
https://github.com/devflowinc/hackernews-ingest # Scripts to ingest hackernews
https://github.com/devflowinc/steam-explorer #
https://github.com/devflowinc/trieve-client-ts # TypeScript SDK for Trieve
https://github.com/devflowinc/trieve-ruby-client # Ruby Client for Trieve REST API
https://github.com/devflowinc/mintlify-docsearch-component # react component for mintlify docsearch
https://github.com/devflowinc/trieve-kickstarter #
https://github.com/devflowinc/trieve-rust-client # Rust API client library for Trieve
https://github.com/devflowinc/opm-handbooks-example #
https://github.com/devflowinc/producthunt-ui #
https://github.com/devflowinc/trieve-ts-fetch-client # Typescript-fetch client for Trieve
https://github.com/devflowinc/podfoods-discovery # An exploratory demo showcasing the Trieve search APIs on the Pod Foods catalog.
https://github.com/devflowinc/install-embeddings #

Vectara
https://github.com/vectara/hallucination-leaderboard # Leaderboard Comparing LLM Performance at Producing Hallucinations when Summarizing Short Documents
https://github.com/vectara/vectara-answer # LLM-powered Conversational AI experience using Vectara
https://github.com/vectara/vectara-ingest # An open source framework to crawl data sources and ingest into Vectara
https://github.com/vectara/create-ui # Generate a working React codebase for a range of generative and semantic search UIs
https://github.com/vectara/py-vectara-agentic # A python library for creating AI assistants with Vectara, using Agentic RAG
https://github.com/vectara/react-search # UI widget for adding semantic search to your React UI in just a few lines of code
https://github.com/vectara/sankofa # Sankofa is a browser extension that allows you to store pages you visit and query them using Vectara.
https://github.com/vectara/react-chatbot # UI widget for adding a chatbot to your React UI in just a few lines of code
https://github.com/vectara/getting-started # Examples of how to use the Vectara platform in several common programming languages
https://github.com/vectara/example-notebooks # Jupyter notebooks with example code for Vectara
https://github.com/vectara/portal # Codebase for Project Portal. Built in NextJS.
https://github.com/vectara/ragtime # An open source implementation of a bot that can respond to user questions from Slack, Discord by utilizing Vectara RAG
https://github.com/vectara/stream-query-client # A TypeScript utility for easily making requests/parsing responses to/from Vectara's streaming query API
https://github.com/vectara/python-sdk # A Python SDK for accessing the Vectara API
https://github.com/vectara/typescript-sdk # Official Typescript SDK for the Vectara API
https://github.com/vectara/magazine-search-demo # End-to-end example of querying magazine articles, including indexing, highlighting, and UI controls
https://github.com/vectara/search-hackernews # Search for Hacker News, by Vectara
https://github.com/vectara/halu_control # Methods for controlling hallucinations for LLM
https://github.com/vectara/search-ui #
https://github.com/vectara/vectara-docs # Documentation for Vectara's GenAI Platform
https://github.com/vectara/js-widgets # A repository containing JS versions of Vectara's UI components
https://github.com/vectara/protos # Protobuf files for use with the Vectara platform
https://github.com/vectara/vectara-ui # Vectara's official React UI library
https://github.com/vectara/chatbot-streamlit # Base code for a chatbot using streamlit
https://github.com/vectara/hotel-reviews-demo # Example code to search hotel reviews
https://github.com/vectara/vectara-index-git-docs # Index contents from a GitHub repository to Vectara
https://github.com/vectara/vanilla-js-search #
https://github.com/vectara/test-app #
