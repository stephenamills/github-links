https://github.com/redhat-scholars/debezium-tutorial

https://github.com/redhat-scholars/redhat-scholars.github.io
https://github.com/redhat-scholars/kubernetes-tutorial
https://github.com/redhat-scholars/rhods-od-workshop
https://github.com/redhat-scholars/kube-native-java-apps
https://github.com/redhat-scholars/linux-tutorial
https://github.com/redhat-scholars/openshift-apps-resource-management
https://github.com/redhat-scholars/cloud-native-business-automation
https://github.com/redhat-scholars/serverless-workflow
https://github.com/redhat-scholars/rhoda-guide
https://github.com/redhat-scholars/ansible-tutorial

https://github.com/redhat-middleware-workshops/quarkus-workshop-m1m2
https://github.com/redhat-middleware-workshops/workshop-amq-streams
https://github.com/redhat-middleware-workshops/dayinthelife-streaming
https://github.com/redhat-middleware-workshops/rhtr-2020-api-mgmt-kafka-workshop
https://github.com/redhat-middleware-workshops/dayinthelife-serverless
https://github.com/redhat-middleware-workshops/camelk-hackathon
https://github.com/redhat-middleware-workshops/cloud-native-workshop-v2-labs-solutions
https://github.com/redhat-middleware-workshops/ccn-user-report
https://github.com/redhat-middleware-workshops/workshop-camel3
https://github.com/redhat-middleware-workshops/edge-to-cloud-data-pipelines-workshop
https://github.com/redhat-middleware-workshops/cloud-native-workshop-v2m1-guides
https://github.com/redhat-middleware-workshops/cloud-native-workshop-v2m4-guides
https://github.com/redhat-middleware-workshops/cloud-native-workshop-v2m4-labs
https://github.com/redhat-middleware-workshops/quarkus-workshop-m1m2-labs
https://github.com/redhat-middleware-workshops/cloud-native-workshop-v2m2-guides
https://github.com/redhat-middleware-workshops/cloud-native-workshop-v2m3-guides

https://github.com/quarkuscoffeeshop

https://github.com/karafka/karafka # Ruby and Rails efficient Kafka processing framework
https://github.com/karafka/rdkafka-ruby # Modern and performant Kafka client library for Ruby based on librdkafka
https://github.com/karafka/waterdrop # Standalone Karafka library for producing Kafka messages
https://github.com/karafka/example-apps # Karafka and WaterDrop example applications
https://github.com/karafka/karafka-web # Web UI for monitoring and managing Karafka consumers
https://github.com/karafka/karafka-testing # Library which provides helpers for easier Karafka consumers tests
https://github.com/karafka/karafka-core # A toolset of small support modules used throughout the Karafka ecosystem
https://github.com/karafka/wiki # Wiki of the main Karafka repository
https://github.com/karafka/misc # Miscellaneous data related to Karafka, like graphics, charts, etc
https://github.com/karafka/.github # Repository containing the Karafka organization README

https://github.com/osodevops/aws-enterprise-naming-tagging-standard # AWS Tagging policy and naming convention for all resources created within any AWS accounts under the
AWS Master Account. https://github.com/osodevops/aws-terraform-module-cardano-stake-pool # A Terraform module to deploy a HA Cardano Stake Pool on AWS
https://github.com/osodevops/ansible-role-cardano-node # Ansible role for the provisioning of Shelly Cardano binaries from source.
https://github.com/osodevops/confluent-kubernetes-playground # Playground for Kafka / Confluent Kubernetes experimentations
https://github.com/osodevops/terraform-azure-confluent-platform # Terraform Module for deploying best practice HA Confluent Platform on Azure
https://github.com/osodevops/kubernetes-volume-snapshots # Navigate through the Kubernetes api, and locate any underlying Persistent Volumes and create a snapshot of each
of these volumes. https://github.com/osodevops/kafka-gitops-examples # A Kafka / Confluent GitOps workflow example for multi-env deployments with Flux, Kustomize, Helm and Confluent For Kub
ernetes (CFK) Operator https://github.com/osodevops/devops-onboarding-checklist # This onboarding checklist contains sample activities that are good practices for onboarding application teams to
utilise DevOps capabilities https://github.com/osodevops/aws-terraform-module-ssm-automated-patching # Terraform module to automate patching of AMI templated EC2 Linux instances in a specify schedule
https://github.com/osodevops/aws-terraform-module-tableau-public # Tableau on demand is now enterprise ready, fully automated Tableau Server solution
https://github.com/osodevops/kafka-arm-images # CFK deployment of ARM based images on Raspberry Pi
https://github.com/osodevops/pedigree # As a frequent user of GitHub I find and re-use many Open Source projects. Often when looking at which project to use / implement /
improve / consume I have to look through and perform lots of repetitive analytical tasks to figure out statistics. https://github.com/osodevops/aws-openvpn-solution # A guide on how to secure your AWS infrastructure with a simple OpenVPN deployment
https://github.com/osodevops/aws-terraform-module-openvpn-byol # A terraform module for deploying OpenVPN Access Server on AWS
https://github.com/osodevops/ansible-role-cardano-stake-pool # Ansible Role for setting up a Cardano stake pool.
https://github.com/osodevops/kafka-audit-security-acls # Testing the audit logging of Confluent Kafka security ACLs
https://github.com/osodevops/aws-terraform-module-codebuild-packer # AMI builder using native AWS CodeBuild running Packer and CodePipeline to orchestrate the entire proce
ss. https://github.com/osodevops/confluent-gitops-demo # A fully automated Confluent Platform deployment using GitOps. Showcases multi namespaced environments and the Terrafor
m Confluent Provider. https://github.com/osodevops/aws-efs-snapshot # Utility container which takes all EFS drives, mounts them on EC2 backed with sufficient EBS space, copies files and permiss
ions and terminates EC2 instance. https://github.com/osodevops/aws-terraform-module-ssm-session-manager # A terraform module for quickly configuring AWS SSM Session Manager.
https://github.com/osodevops/vagrant-confluent-platform # Vagrantfile to start a virtual machine running the confluent platform: Zookeeper, Kafka, Schema registry and Con
fluent control centre using cp-ansible https://github.com/osodevops/chaos-kafka # Chaos scenarios for Kafka 💥
https://github.com/osodevops/aws_zookeeper_cluster # Deploy an external Zookeeper cluster in AWS using Ansible
https://github.com/osodevops/aws_solr_cloud_cluster # Deploy Solr Cloud in clustered mode on AWS with Ansible
https://github.com/osodevops/aws-cli-cookbook # A series of useful aws cli commands to help identify usage and cost saving opportunities
https://github.com/osodevops/aws-terraform-module-waf #
https://github.com/osodevops/kr # kubernetes log collection tool for developers
https://github.com/osodevops/docker-devsecops-nikto # Container for Nikto Web Vulnerability Scanner
https://github.com/osodevops/aws-terraform-module-elasticcache-redis #
https://github.com/osodevops/docker-pg-dumper # Postgres utility container to dump a database and push to S3 :) Lovely
https://github.com/osodevops/aws-terraform-module-iam # Terraform module which contains packages for creating IAM policies, roles, users and groups
https://github.com/osodevops/byod-enterprise-security-standard # This standard outlines the security requirements required to protect your organisational data and financia
l assets https://github.com/osodevops/docker-cp-ansible #
https://github.com/osodevops/cloudformation-exercise # 1 hour practical exercise to test AWS cloudformation knowledge.
https://github.com/osodevops/aws-terraform-module-vpc # Terraform module which contains packages for creating a best-practices Virtual Private Cloud (VPC) setup in AWS
https://github.com/osodevops/aws-enterprise-ami-hardening-standard # Guidelines for which the hardened golden AMI’s are created and shared across the AWS multiple accounts
. https://github.com/osodevops/aws-lambda-log-collector # Lambda function triggered by Cloudwatch cron event.
https://github.com/osodevops/terraform-aws-cloudtrail #
https://github.com/osodevops/aws-terraform-module-guardduty # A terraform module for configuring AWS GuardDuty with SNS notification and S3 or Kinesis backend
https://github.com/osodevops/event-driven-architecture-workshop # Helping you understand and harness the power of event driven architectures
https://github.com/osodevops/docker-packer # Containerised Packer to avoid having to install CLI on Dev or CI/CD machines.
https://github.com/osodevops/kafka-connect-smt-demo #
https://github.com/osodevops/aws-terraform-module-nlb #
https://github.com/osodevops/docker-zookeeper # Docker images for Apache Zookeeper based on Confluent.
https://github.com/osodevops/aws-terraform-module-s3 # Terraform S3 module for AWS
https://github.com/osodevops/bizdev-aws-domain-checker # Python util script to parse a list of URLs and checkers each against public IP ranges of all AWS services.
https://github.com/osodevops/aws-terraform-module-acm-certificate # About A Terraform module to create an Amazon Certificate Manager (ACM) certificate with Route 53 DNS va
lidation. https://github.com/osodevops/osodevops.github.io # Live new updates from the OSO team
https://github.com/osodevops/aws-terraform-module-security-buckets #
https://github.com/osodevops/aws-terraform-module-ssm-parameter-store # This module defines read and write actions from parameter store.
https://github.com/osodevops/aws-terraform-module-sns-to-slack # Terraform module to push notifications to slack from AWS SNS
https://github.com/osodevops/bizdev-waf-checker # Utility to check a bunch of domains against active WAF protection
https://github.com/osodevops/news # A curated feed from the engineering team
https://github.com/osodevops/kafka-topology-playground # A playground for exploring solutions for automating the management of a Kafka cluster.
https://github.com/osodevops/pedigree-publisher #
https://github.com/osodevops/terraform-admin-administrative-console-dashboard #
https://github.com/osodevops/aws-terraform-module-cloudfront-whitelabel # Allow creation of domain whitelabel cloudfront distributions
https://github.com/osodevops/.github #
https://github.com/osodevops/aws-terraform-module-ssm-agent #
https://github.com/osodevops/aws-k8s-kops #
https://github.com/osodevops/aws-terraform-module-inspector # Terraform module to deploy AWS Inspector in your account
https://github.com/osodevops/aws-terraform-module-ssm-monitoring # SSM Document to install a bunch of monitoring agents on EC2 Linux Instances.
https://github.com/osodevops/aws-terraform-module-iam-bastion # A bastion controlled by dynamic ssh generated from IAM
https://github.com/osodevops/terraform-gitops-example # A Terraform GitOps workflow example for multi cloud deployments with Flux, Kustomize, Helm and Terraform Controller
https://github.com/osodevops/docker-jenkins-cjoc # Cloudbees Enterprise Jenkins CJOC
https://github.com/osodevops/aws-lambda-encrypt-ami # Lambda function triggered by SNS notification on a successful AMI Packer build.
https://github.com/osodevops/docker-devsecops-wafw00f # Container for WAFW00F Web Application Firewall Detector
https://github.com/osodevops/confluent-openshift-team-alpha-resources # GitOps enabled repo to provision Kafka as a service for a single team.
https://github.com/osodevops/ansible-role-confluent-patching # An structured way of OS patching Confluent running on Centos / RHEL / Amazon Linux
https://github.com/osodevops/docker-jenkins-slave # Basic Jenkins slave node which connects via JNLP
https://github.com/osodevops/aws-terraform-module-ssm-bastion #
https://github.com/osodevops/aws-terraform-state # A template Terraform state module. Follow the instructions to use this bad boy.
https://github.com/osodevops/kafka-cloud-dev #
https://github.com/osodevops/kafka-on-kubernetes-tutorial # Kafka Cluster install on Kubernetes and Monitoring with Grafana
https://github.com/osodevops/docker-sample-ruby-2.2 # Sample Hello World Ruby application serving on port 80
https://github.com/osodevops/ansible-role-kubernetes # Ansible role for the provisioning of any Kubernetes version
https://github.com/osodevops/docker-jenkins-master # Jenkins Master with all the bells and whistles
https://github.com/osodevops/aws-terraform-module-client-vpn #
https://github.com/osodevops/confluent-azure-gitops # A GitOps based deployment of Confluent platform on AKS using Terraform / Helm / CFK and Flux
https://github.com/osodevops/kafka-sample-application # A simple Java producer and consumer to test connectivity and Kafka functionality
https://github.com/osodevops/kafka-application-monitoring-elastic # Local development of a Kafka cluster monitored by the Elastic stack (Metricbeat / Filebeat)
https://github.com/osodevops/ansible-role-clamav # Ansible role for the provisioning of ClamAV from binaries
https://github.com/osodevops/openshift-confluent # Document Kafka deployments via the Confluent operator on OpenShift/OKD
https://github.com/osodevops/aws-terraform-module-confluent # Terraform Module for deploying best practice HA Confluent Platform on AWS
https://github.com/osodevops/template-quix-siem # A template for quix.io that will consume log data and scan the data with sigma rules to provide alerting
https://github.com/osodevops/ansible-role-confluent-connectors # An automated way of displaying, configuring and deleting connectors
https://github.com/osodevops/aws-terraform-module-proftp # A terraform module for deploying ProFTP on AWS
https://github.com/osodevops/aws-cardano-example-stake-pool # A full stake pool infrastructure build using GitHub actions. Fork and launch in your own AWS account.
https://github.com/osodevops/aws-terraform-module-notify-slack-lambda # This module deploys and configures an SNS topic (or uses an existing one) and an AWS Lambda functio
n that sends notifications to Slack https://github.com/osodevops/aws-terraform-module-vpc-peering #
https://github.com/osodevops/aws-terraform-openshift # Provision AWS infrastructure with Terraform, and install Red Hat OpenShift Container Platform 3.11
https://github.com/osodevops/argocd-gitops-demo # About A fully automated deployment using GitOps. Showcases multi namespaced environments and the progressive delivery
https://github.com/osodevops/aws-terraform-module-lambda-at-edge # A terraform module for deploying Lambda@Edge function in terraform
https://github.com/osodevops/aws-terraform-module-config-rules # Enables AWS Config and adds managed config rules with good defaults for PCI / HIPAA / GPG compliance
https://github.com/osodevops/aws-terraform-alb-logs-to-elasticsearch # Terraform module to send ALB logs from S3 bucket to ElasticSearch using AWS Lambda
https://github.com/osodevops/aws-terraform-module-cloudfront-s3-redirect # An AWS S3 & Cloudfront based solution to redirect domains in a serverless way
https://github.com/osodevops/aws-terraform-dynamodb # Dynamo DB all signing module
https://github.com/osodevops/example-serverless-app-with-dynamodb #
https://github.com/osodevops/argocd-confluent-deployments # Example Confluent deployments enabled by Argo CD
https://github.com/osodevops/aws-terraform-module-cloudwatch-audit # A terraform module for alerting on AWS CloudTrail events with CloudWatch alerts and SNS.
https://github.com/osodevops/aws-terraform-module-template # Terraform template for new account and module provisioning.
https://github.com/osodevops/docker-terraform # Docker container to run Terraform via CI/CD
https://github.com/osodevops/aws-terraform-module-acm # Using AWS ACM to create an SSL certificate in a Public Zone
https://github.com/osodevops/pedigree_trending_github_queue #
https://github.com/osodevops/docker-gitlab-nexus # Testing GitLab Ci locally with Nexus, Traefik and Docker
https://github.com/osodevops/aws-terraform-module-ebs-volume-snapshots # Lifecycle Manager using lifecycle policy for EBS Snapshots based on tag
https://github.com/osodevops/docker-kafka # Docker images for Apache Kafka based on Confluent.
https://github.com/osodevops/docker-aws-cli-postgres # AWS CLI v2 with support for Postgres 10 tooling pg_dump / pg_restore
https://github.com/osodevops/aws-terraform-module-apigateway # A terraform module for deploying API Gateway with optional VPC Link
https://github.com/osodevops/uk-stock-bot # Alerts when stock becomes available for specified products in UK
https://github.com/osodevops/benchmark-containers # Benchmark container build files for a variety of cloud-native benchmarks.
https://github.com/osodevops/aws-terraform-module-cloudfront-s3 # A terraform module for deploying Cloudfront backed by S3
https://github.com/osodevops/kafka-performance-testing # A collection of Ansible playbooks for performance testing an Apache Kafka cluster
https://github.com/osodevops/aws-terraform-module-iam-groups # OSO DevOps has created a set of example groups that should be used for securing your AWS account
https://github.com/osodevops/confluent-openshift-gitops-demo # A Confluent Platform deployed on OpenShift 4 via GitOps
https://github.com/osodevops/aws-terraform-module-elasticache #
https://github.com/osodevops/docker-elk # The Elastic stack (ELK) powered by Docker and Compose.
https://github.com/osodevops/kafka-azure-app-insights # Monitoring librdkafka and Confluent components in Azure Ecosystems
https://github.com/osodevops/aws-terraform-module-acmpca # Create AWS Certificate Manager Private Certificate Authorities (ACM PCA Certificate Authorities)
https://github.com/osodevops/aws-terraform-kinesis-stream # AWS Kinesis Stream module
https://github.com/osodevops/flux-gitops-demo #

https://github.com/strimzi/strimzi-kafka-operator # Apache Kafka® running on Kubernetes
https://github.com/strimzi/strimzi-kafka-bridge # An HTTP bridge for Apache Kafka®
https://github.com/strimzi/strimzi-kafka-oauth # OAuth2 support for Apache Kafka® to work with many OAuth2 authorization servers
https://github.com/strimzi/client-examples # Example clients for use with Strimzi
https://github.com/strimzi/proposals # Strimzi proposals
https://github.com/strimzi/drain-cleaner # Utility to help with draining nodes running Strimzi-managed Apache Kafka® or ZooKeeper®
pods https://github.com/strimzi/strimzi-canary # Strimzi canary
https://github.com/strimzi/strimzi-mqtt-bridge # An MQTT bridge for Apache Kafka®
https://github.com/strimzi/strimzi.github.io # Strimzi web site project
https://github.com/strimzi/kafka-kubernetes-config-provider # Kubernetes Configuration Provider for Apache Kafka®
https://github.com/strimzi/kafka-access-operator # Operator for sharing access to Strimzi clusters across namespaces
https://github.com/strimzi/test-container # Strimzi Test container for unit and integration tests
https://github.com/strimzi/test-clients # Clients used in Strimzi system tests
https://github.com/strimzi/kafka-env-var-config-provider # Environment variable configuration provider for Apache Kafka®
https://github.com/strimzi/governance # Strimzi governance policies
https://github.com/strimzi/metrics-reporter # Prometheus Metrics Reporter for Apache Kafka server and client compoenents
https://github.com/strimzi/test-container-images # Container images for Strimzi test Container
https://github.com/strimzi/.github # Community health files for the Strimzi project

https://github.com/kafkajs/canary-app # Kafka application to test beta versions of KafkaJS

https://github.com/confluentinc/confluent-kafka-go # Confluent's Apache Kafka Golang client
https://github.com/confluentinc/schema-registry # Confluent Schema Registry for Kafka
https://github.com/confluentinc/examples # Apache Kafka and Confluent Platform examples and demos
https://github.com/confluentinc/demo-scene # 👾Scripts and samples to support Confluent Demos and Talks. ⚠️Might be rough around the edges
https://github.com/confluentinc/cp-all-in-one # docker-compose.yml files for cp-all-in-one , cp-all-in-one-community, cp-all-in-one-cloud, Apache Kafka Confluent Platform
https://github.com/confluentinc/librdkafka # The Apache Kafka C/C++ library
https://github.com/confluentinc/ksql # The database purpose-built for stream processing applications.
https://github.com/confluentinc/confluent-kafka-python # Confluent's Kafka Python Client
https://github.com/confluentinc/parallel-consumer # Parallel Apache Kafka client wrapper with per message ACK, client side queueing, a simpler consumer/producer API with key concurrency and extendable non-blocking IO processing.
https://github.com/confluentinc/cli # CLI for Confluent Cloud and Confluent Platform
https://github.com/confluentinc/kafka-streams-examples # Demo applications and code examples for Apache Kafka's Streams API.
https://github.com/confluentinc/confluent-kafka-dotnet # Confluent's Apache Kafka .NET client
https://github.com/confluentinc/confluent-sigma #
https://github.com/confluentinc/jmx-monitoring-stacks # 📊 Monitoring examples for Confluent Cloud and Confluent Platform
https://github.com/confluentinc/confluent-kafka-javascript # Confluent's Apache Kafka JavaScript client
https://github.com/confluentinc/confluent-kubernetes-examples # Example scenario workflows for Confluent for Kubernetes
https://github.com/confluentinc/cp-demo # Confluent Platform Demo including Apache Kafka, ksqlDB, Control Center, Schema Registry, Security, Schema Linking, and Cluster Linking
https://github.com/confluentinc/cp-ansible # Ansible playbooks for the Confluent Platform
https://github.com/confluentinc/kafka-rest # Confluent REST Proxy for Kafka
https://github.com/confluentinc/terraform-provider-confluent # Terraform Provider for Confluent
https://github.com/confluentinc/coding-in-motion # Source code for the "Coding in Motion" series.
https://github.com/confluentinc/flink-cookbook #
https://github.com/confluentinc/stream-me-up-scotty # A wide range of Digital Assets from Confluent's Solution Engineering team for Confluent Cloud
https://github.com/confluentinc/kafka-images # Confluent Docker images for Apache Kafka
https://github.com/confluentinc/control-center-images # Docker images for enterprise control center images
https://github.com/confluentinc/kafka-connect-jdbc # Kafka Connect connector for JDBC-compatible databases
https://github.com/confluentinc/kafkacat-images # Docker Images for Kafkacat
https://github.com/confluentinc/kafka-tutorials # Tutorials and Recipes for Apache Kafka
https://github.com/confluentinc/confluent-platform-security-tools # Security tools for the Confluent Platform.
https://github.com/confluentinc/ccloud-connectivity # Setup and testing connectivity to Confluent Cloud
https://github.com/confluentinc/learn-kafka-courses # Learn the basics of Apache Kafka® from leaders in the Kafka community with these video courses covering the Kafka ecosystem and hands-on exercises.
https://github.com/confluentinc/event-streaming-patterns # A collection of Event Streaming Patterns, including problem statements, solutions, and implementation examples.
https://github.com/confluentinc/kafka-connect-datagen # Connector that generates data for demos
https://github.com/confluentinc/ducktape # System integration and performance tests
https://github.com/confluentinc/ksqldb-recipes #
https://github.com/confluentinc/demo-stream-designer # Current 2022 Confluent Keynote Demo covering Stream Designer, Stream Catalog, and Stream Sharing.
https://github.com/confluentinc/commercial-workshops # Confluent Commercial SE Team's Demo and Workshop Repository
https://github.com/confluentinc/kafka-connect-elasticsearch # Kafka Connect Elasticsearch connector
https://github.com/confluentinc/confluent-hybrid-cloud-workshop # Confluent Hybrid Cloud Workshop
https://github.com/confluentinc/kafka-connect-storage-cloud # Kafka Connect suite of connectors for Cloud storage (Amazon S3)
https://github.com/confluentinc/demo-change-data-capture # This demo shows how to capture data changes from relational databases (Oracle and PostgreSQL) and stream them to Confluent Cloud, use ksqlDB for real-time stream processing, send enriched data to cloud data warehouses (Snowflake and Amazon Redshift).
https://github.com/confluentinc/vscode # Confluent for Visual Studio Code
https://github.com/confluentinc/learn-practical-event-modeling #
https://github.com/confluentinc/ksql-elasticsearch-demo #
https://github.com/confluentinc/kafka-connect-hdfs # Kafka Connect HDFS connector
https://github.com/confluentinc/confluent-kafka-go-example # Example application using the confluent-kafka-go client
https://github.com/confluentinc/training-developer-src # Source Code accompanying the Confluent Kafka for Developers course
https://github.com/confluentinc/rest-utils # Utilities and a small framework for building REST services with Jersey, Jackson, and Jetty.
https://github.com/confluentinc/demo-application-modernization # Application modernization example including Confluent Cloud, ksqlDB, Postgres, and Elasticsearch.
https://github.com/confluentinc/operator-earlyaccess # Confluent Operator Early Access docs
https://github.com/confluentinc/ksql-images # KSQL platform docker images
https://github.com/confluentinc/confluent-oauth-extensions #
https://github.com/confluentinc/streaming-ops # Simulated production environment running Kubernetes targeting Apache Kafka and Confluent components on Confluent Cloud. Managed by declarative infrastructure and GitOps.
https://github.com/confluentinc/avro-cpp-packaging # Avro C++ library packaging
https://github.com/confluentinc/kafka-connect-storage-common # Shared software among connectors that target distributed filesystems and cloud storage.
https://github.com/confluentinc/csid-secrets-providers # Enables use of external third-party systems for storing/retrieving key/value pairs with Confluent clusters.
https://github.com/confluentinc/demo-database-modernization # This demo shows how to stream data to cloud databases with Confluent. It includes fully-managed connectors (Oracle CDC, RabbitMQ, MongoDB Atlas), ksqlDB/Flink SQL as stream processing engine.
https://github.com/confluentinc/openmessaging-benchmark #
https://github.com/confluentinc/ccloud-sdk-go-v2 # SDK for interacting with Confluent Cloud
https://github.com/confluentinc/flink-table-api-python-examples # Python Examples for running Apache Flink® Table API on Confluent
Cloud https://github.com/confluentinc/tutorials #
https://github.com/confluentinc/common # Common utilities library containing metrics, config and utils
https://github.com/confluentinc/flink-table-api-java-examples # Java Examples for running Apache Flink® Table API on Confluent Cloud
https://github.com/confluentinc/dotnetstreamprocessing # This repository explores stream processing with the Confluent .NET Producer, Consumer and the TPL library https://github.com/confluentinc/mox # A hybrid mock and proxy server - easily programmable and runs on express
https://github.com/confluentinc/common-docker # Confluent Commons with support for building and testing Docker images.
https://github.com/confluentinc/go-editor # Allow your CLI users to edit arbitrary data in their preferred editor
https://github.com/confluentinc/opa_for_confluent_cloud # OPA Policies for Confluent Terraform Provider
https://github.com/confluentinc/kafka-mqtt-images # Confluent Docker images for Kafka MQTT
https://github.com/confluentinc/learn-building-flink-applications-in-java-exercises #
https://github.com/confluentinc/libserdes # Avro Serialization/Deserialization C/C++ library with Confluent schema-registry support
https://github.com/confluentinc/ide-sidecar # Sidecar application used by Confluent for VS Code, as a local proxy for Confluent Cloud, Confluent Platform and local Kafka clusters, to help users build streaming applications.
https://github.com/confluentinc/cli-plugins # Plugins to extend behavior of Confluent CLI
https://github.com/confluentinc/policy-library-confluent-terraform #
https://github.com/confluentinc/learn-kafka-kraft # KRaft mode playground
https://github.com/confluentinc/training-fundamentals-src # Source code accompanying the course "Apache Kafka Technical Essentials"
https://github.com/confluentinc/confluent-docker-utils # Common Python utils for testing Confluent's Docker images
https://github.com/confluentinc/live-labs # This repository contains demos created by Technical Marketing team and delivered as part of Confluent Live Labs program. The team members will continuously publish more demos over time, meanwhile we encourage you to create a Confluent Cloud account and try the existing content.
https://github.com/confluentinc/cloud-consumption-report # Project used for generating a PDF report at organization level for Confluent cloud
https://github.com/confluentinc/etl # Code for ETL data pipelines
https://github.com/confluentinc/apac-workshops # Pull Requests for GitHub repository settings
https://github.com/confluentinc/learn-flink-sql-exercises #
https://github.com/confluentinc/learn-apache-flink-101-exercises #
https://github.com/confluentinc/schema-registry-images # Docker Images for Schema Registry
https://github.com/confluentinc/kafka-connect-http-demo # A demo target for running the Confluent HTTP sink connector
https://github.com/confluentinc/go-ps1 # Customizable PS1 prompts for Cobra CLIs
https://github.com/confluentinc/training-cloud-src #
https://github.com/confluentinc/training-administration-src # Contains docker-compose file needed for Apache Kafka Administration by Confluent training
https://github.com/confluentinc/kafka-rest-sdk-go # Go SDK / API client for Confluent Kafka REST Proxy
https://github.com/confluentinc/online-inferencing-blog-application # Source code and application accompanying the online inferencing blog
https://github.com/confluentinc/realtime-sentiment-analysis #
https://github.com/confluentinc/data-mesh-demo # A Data Mesh proof-of-concept built on Confluent Cloud
https://github.com/confluentinc/confluent-cloud-secrets-engine #
https://github.com/confluentinc/bottledwater-pg # Change data capture from PostgreSQL into Kafka
https://github.com/confluentinc/ksql-pue-workshop # Introductory KSQL workshop
https://github.com/confluentinc/kafka-rest-images # Docker Images for Kafka REST
https://github.com/confluentinc/learn-apache-kafka-for-dotnet-developers-exercises #
https://github.com/confluentinc/learn-governing-data-streams-exercises #
https://github.com/confluentinc/influx_kafka # Monitor Kafka environments and Confluent Platform with InfluxDB and Telegraf (via Jo
lokia) https://github.com/confluentinc/hackathons # Contains skeleton projects for hackathons.
https://github.com/confluentinc/ccloud-serverless-integration # Code repo for the DevX Serverless effort including AWS Lambda and Azure Functions. Will eventually expand to cover other cloud providers.
https://github.com/confluentinc/gitleaks # Scan git repos (or files) for secrets using regex and entropy 🔑
https://github.com/confluentinc/schema-deletion-tool # Tool for discovering unused schemas and delete them.
https://github.com/confluentinc/ansible-collection-confluent-cloud # Confluent Cloud Ansible Collection
https://github.com/confluentinc/demo-mainframe-zos #
https://github.com/confluentinc/demos-docker-common #
https://github.com/confluentinc/demo-10x-storage # Demonstrate the benefits of Confluent Infinite Storage with a Machine Learning Example
https://github.com/confluentinc/securing-kafka-blog # Secure Kafka cluster (in a VM) for development and testing
https://github.com/confluentinc/kafka-replicator-images # Docker images for Kafka Connect
https://github.com/confluentinc/csfle-examples #
https://github.com/confluentinc/kafka-workshop #
https://github.com/confluentinc/cp_audit # Collect and Analyze Confluent Platform Audit Logs with the Elastic Stack
https://github.com/confluentinc/learn-apache-flink-table-api-for-java-exercises #
https://github.com/confluentinc/cp-docker-client-test-cluster # Dockerized cluster to be used for local integration testing
https://github.com/confluentinc/streamlit-flink-demo #
https://github.com/confluentinc/resolver-maven-plugin # A Maven plugin for resolving a version range of an artifact to the highest matching version.
https://github.com/confluentinc/avro-c-packaging # Avro C library packaging
https://github.com/confluentinc/getting-started-guides #
https://github.com/confluentinc/learn-dataflow-programming-with-flink-and-kafka #
https://github.com/confluentinc/pmm #
https://github.com/confluentinc/confluent-operator-examples # Illustrative configurations for Confluent Operator 1.x
https://github.com/confluentinc/learn-hybrid-cloud-exercises #
https://github.com/confluentinc/commercial-se # Confluent Commercial Sales Engineer repo
https://github.com/confluentinc/homebrew-confluent-hub-client #
https://github.com/confluentinc/kibosh #
https://github.com/confluentinc/schema-registry-workshop #
https://github.com/confluentinc/confluent-google-examples # Examples to what it pertains to Confluent and GCP architectures
https://github.com/confluentinc/cfk-workshop #
https://github.com/confluentinc/qcon-ai-workshop # Exercises for QCon Workshop
https://github.com/confluentinc/kafka-deprecated-fork # Mirror of Apache Kafka
https://github.com/confluentinc/training-adm-sec-rbac-student # Public repositoy for source files students need to complete training for Confluent Role Based Access Control
https://github.com/confluentinc/ksql-workshop # KSQL Workshop
https://github.com/confluentinc/hunter-public #
https://github.com/confluentinc/enterprise-workshops # Assets to support workshops led by Enterprise SE team
https://github.com/confluentinc/training-cloud-day1-src #
https://github.com/confluentinc/learn-kafka-cluster-linking #
https://github.com/confluentinc/infoq-kafka-ksql # Code samples to go with InfoQ article
https://github.com/confluentinc/simple-streaming-app #
https://github.com/confluentinc/test-for-transfer # To be moved to confluentinc
https://github.com/confluentinc/customer-utilities #
https://github.com/confluentinc/demo-grafana-metrics # Demonstration of Grafana Cloud integration with Confluent Cloud metrics API
https://github.com/confluentinc/fork.confluent-kubernetes-examples-1 # Example scenario workflows for Confluent for Kubernetes
https://github.com/confluentinc/cyber-quickstart # A quick start for cyber SIEM and observability demos, POCs, pilots, etc with Confluent
https://github.com/confluentinc/camus # Mirror of Linkedin's Camus
https://github.com/confluentinc/wikiedits #
https://github.com/confluentinc/support-metrics-common # Common utilities for metrics collection of proactive support
https://github.com/confluentinc/ksqldb-prstats # an App that uses ksqlDB to output realtime statistics about pull requests for any project on Github
https://github.com/confluentinc/kafka-rest-node # Node.js client for the Kafka REST proxy
https://github.com/confluentinc/demo-bikeshare #
https://github.com/confluentinc/confluent-kafka-go-dev # [EXPERIMENTAL] Development / WIP / exploratory / test fork of confluent-kafka-go
https://github.com/confluentinc/pact-ruby-standalone #
https://github.com/confluentinc/c360 # Data pipeline for Customer 360
https://github.com/confluentinc/terminal-tips #
https://github.com/confluentinc/learn-apache-kafka-for-python-developers-exercises # Exercise repo for the Apache Kafka for Python Developers course
https://github.com/confluentinc/training-modules-src # Source code to accompany Confluent e-learning materials
https://github.com/confluentinc/learn-kafka-transactions #
https://github.com/confluentinc/realtime-data-mesh #
https://github.com/confluentinc/training-fundamentals-gitpod-lab-src #
https://github.com/confluentinc/dhakne-blogs # Github space for my blog work
https://github.com/confluentinc/confluent-azure-examples #
https://github.com/confluentinc/castle # Castle is a test harness for Apache Kafka, Trogdor, and related projects.
https://github.com/confluentinc/test_counter # Count the number of junit tests in a repository
https://github.com/confluentinc/client-tests # Additional client tests
https://github.com/confluentinc/go-archetype # Project archetyping and templating in Golang
https://github.com/confluentinc/ccloud-sdk-go-v1-public #
https://github.com/confluentinc/training-tutorial-src # Source code accompanying the Kafka Tutorial
https://github.com/confluentinc/qcon-microservices # Example online orders app composed of event-driven microservices. Built for QC on workshop.
https://github.com/confluentinc/training-flink-sql-cc-src #
https://github.com/confluentinc/learn-monitoring-troubleshooting-exercises #
https://github.com/confluentinc/training-cao-src # Source code accompanying the course "Monitoring, Troubleshooting and Tuning"
https://github.com/confluentinc/ksql-alert #
https://github.com/confluentinc/kafka-connect-blog # Demo for Kafka Connect with JDBC and HDFS Connectors
https://github.com/confluentinc/demo-trust # Demo for the Trust marketing launch. This includes Confluent Cloud audit logs, data plane role based access control (RBAC), and bring your own key (BYOK).
https://github.com/confluentinc/connect-playground # Kafka Connect playground using gitpod
https://github.com/confluentinc/kafka-connect-test-sdk #
https://github.com/confluentinc/connect-with-confluent-sample # Simple example of a Connect with Confluent native integration withConfluent Cloud
https://github.com/confluentinc/support-metrics-client # The client application that powers metrics collection for pro-active support
https://github.com/confluentinc/training-ksql-and-streams-src # Sample solutions for the exercises of the course KSQL & Kafka Streams
https://github.com/confluentinc/kafka-connect-upgrade-tests #
https://github.com/confluentinc/foundations_kafka_security #
https://github.com/confluentinc/colab #
https://github.com/confluentinc/demo-realtime-data-warehousing # Streaming data pipelines for real-time data warehousing. Includes fully managed connectors (PostgreSQL CDC, Snowflake).
https://github.com/confluentinc/mds-sdk-go-public #
https://github.com/confluentinc/certified-operators # Production catalog for Red Hat Certified Operator Bundles
https://github.com/confluentinc/schema-registry-sdk-go # SDK for communicating with Confluent Schema Registry using Golang
https://github.com/confluentinc/strata-tutorials # Content for Spring 2016 Strata tutorials
https://github.com/confluentinc/fund_kafka_security #
https://github.com/confluentinc/bohemia-public # PoC public repository destination repository
https://github.com/confluentinc/learn-kafka-connect #
https://github.com/confluentinc/cp-discovery #
https://github.com/confluentinc/schema-registry-yang-format #
https://github.com/confluentinc/homebrew-tap # Confluent Homebrew Tap
https://github.com/confluentinc/demo-custom-connector #
https://github.com/confluentinc/proto-go-setter #
https://github.com/confluentinc/training-technical-essentials-src # Source code accompanying the course Apache Kafka Technical Essentials
https://github.com/confluentinc/aws-confluent-devday-workshop # Materials for AWS Confluent DevDay workshop

https://github.com/lensesio/fast-data-dev # Kafka Docker for development. Kafka, Zookeeper, Schema Registry, Kafka-Connect, Landoop Tools, 20+ connectors
https://github.com/lensesio/stream-reactor # A collection of open source Apache 2.0 Kafka Connector maintained by Lenses.io.
https://github.com/lensesio/kafka-topics-ui # Web Tool for Kafka Topics |
https://github.com/lensesio/kafka-connect-ui # Web tool for Kafka Connect |
https://github.com/lensesio/schema-registry-ui # Web tool for Avro Schema Registry |
https://github.com/lensesio/kafka-cheat-sheet # Curated by Lenses.io
https://github.com/lensesio/lenses-docker # ❤for real-time DataOps - where the application and data fabric blends - Lenses
https://github.com/lensesio/kafka-connect-query-language # SQL for Kafka Connectors
https://github.com/lensesio/coyote # Environment, operations and runtime-meta testing tool.
https://github.com/lensesio/cypress-websocket-testing # Test WebSocket connections with Cypress
https://github.com/lensesio/secret-provider # Open Source Secret Provider plugin for the Kafka Connect framework
https://github.com/lensesio/lenses-go # Lenses.io CLI (command-line interface)
https://github.com/lensesio/kafka-autocomplete # Bash completion for Kafka command line utilities.
https://github.com/lensesio/lenses-jdbc # Lenses.io JDBC driver for Apache Kafka
https://github.com/lensesio/stream-reactor-dockers # Docker images for Stream Reactor
https://github.com/lensesio/lenses-helm-charts # Helm Charts for Lenses.io
https://github.com/lensesio/lenses-topology-example # An example of streaming microservices with Apache Kafka and Data Flow Topology integration with Lenses Ⓡ DataOps Plat
form. You can see it in action here: https://www.youtube.com/watch?v=V15mrcA1Wxg
https://github.com/lensesio/datagen # A small project to allow publishing data to Apache Kafka, Apache Pulsar or any other target system
https://github.com/lensesio/redux-lenses-streaming-example #
https://github.com/lensesio/docker-images # Public docker images we use for our infrastructure.
https://github.com/lensesio/lenses-ldap-plugin-template #
https://github.com/lensesio/lenses-serde #
https://github.com/lensesio/lenses-alerts-plugin # Defines interface for pluggable lenses alert services integration, along with some officially supported implementations.
https://github.com/lensesio/kafka-connect-smt # A Lenses.io Kafka Connect Single Message Transform(SMT) collection
https://github.com/lensesio/lenses-cloud-templates # Available templates to deploy Lenses in different cloud providers
https://github.com/lensesio/connect-mock # This is a dummy application that mocks the Kafka Connect API.
https://github.com/lensesio/lenses-serde-protobuf-example #
https://github.com/lensesio/lenses-udf-example # Lenses.io - User Defined Functions for Lenses SQL
https://github.com/lensesio/lenses-security-http-sample # A sample project using the HTTP request to handle the authentication
https://github.com/lensesio/lenses-testing-exercise # QA Interview Exercise
https://github.com/lensesio/merge-repos-blog-repo_b # Demo repository for blog material
https://github.com/lensesio/topology-client # A client to register Kafka microservices with Lenses topology
https://github.com/lensesio/merge-repos-blog-repo_a # Demo repository for blog material
https://github.com/lensesio/.github #
https://github.com/lensesio/product-documentation # Dummy repo for reporting issues with docs.lenses.io
https://github.com/lensesio/lenses-serde-example #
https://github.com/lensesio/restore-consumer-groups-offset # An application that enables reading consumer group offsets stored in Amazon S3 and applying them to the designated Kafka cluster.
https://github.com/lensesio/lenses-serde-kafka-consumer-offsets # A Lenses serde to deserialize the Apache Kafka \_\_conusumer_offset topic

https://github.com/apache/kafka # Mirror of Apache Kafka
https://github.com/apache/calcite # Apache Calcite
https://github.com/apache/camel-examples # Apache Camel Examples
https://github.com/apache/kafka-site # Mirror of Apache Kafka site
https://github.com/apache/flink-playgrounds # Apache Flink Playgrounds
https://github.com/apache/camel-kafka-connector # Camel Kafka Connector allows you to use all Camel components as Kafka Connect connectors
https://github.com/apache/samza # Mirror of Apache Samza
https://github.com/apache/flink-connector-kafka # Apache flink
https://github.com/apache/hbase-connectors # Apache HBase Connectors
https://github.com/apache/gobblin # A distributed data integration framework that simplifies common aspects of big data integration such as data ingestion, replication, or
ganization and lifecycle management for both streaming and batch data ecosystems. https://github.com/apache/camel-spring-boot-examples # Apache Camel Spring Boot Examples
https://github.com/apache/ranger # Apache Ranger - To enable, monitor and manage comprehensive data security across the Hadoop platform and beyond
https://github.com/apache/samza-hello-samza # Mirror of Apache Samza
https://github.com/apache/fineract # Apache Fineract
https://github.com/apache/incubator-kie-kogito-examples # Kogito examples - Kogito is a cloud-native business automation technology for building cloud-ready business appli
cations. https://github.com/apache/flink # Apache Flink
https://github.com/apache/openwhisk-package-kafka # Apache OpenWhisk package for communicating with Kafka or Message Hub
https://github.com/apache/inlong # Apache InLong - a one-stop, full-scenario integration framework for massive data
https://github.com/apache/atlas # Apache Atlas
https://github.com/apache/camel-kafka-connector-examples # Apache Camel Kafka Connector Examples
https://github.com/apache/pinot # Apache Pinot - A realtime distributed OLAP datastore
https://github.com/apache/karaf-decanter # Mirror of Apache Karaf Decanter
https://github.com/apache/hop # Hop Orchestration Platform
https://github.com/apache/plc4x # PLC4X The Industrial IoT adapter
https://github.com/apache/skywalking-rust # Apache SkyWalking Rust Agent
https://github.com/apache/gravitino # World's most powerful open data catalog for building a high-performance, geo-distributed and federated metadata lake.
https://github.com/apache/bigtop # Bigtop is an Apache Foundation project for Infrastructure Engineers and Data Scientists looking for comprehensive packaging, testing, an
d configuration of the leading open source big data components. https://github.com/apache/doris-kafka-connector # Kafka Connector for Apache Doris
https://github.com/apache/samza-beam-examples # Apache samza
https://github.com/apache/eventmesh # EventMesh is a new generation serverless event middleware for building distributed event-driven applications.
https://github.com/apache/geode-kafka-connector # Kafka connector for Apache Geode
https://github.com/apache/pekko-connectors-kafka # Apache Pekko Kafka Connector - Pekko-Connectors is a Reactive Enterprise Integration library for Java and Scala, based o
n Reactive Streams and Apache Pekko. https://github.com/apache/kylin # Apache Kylin
https://github.com/apache/linkis # Apache Linkis builds a computation middleware layer to facilitate connection, governance and orchestration between the upper application
s and the underlying data engines. https://github.com/apache/apisix # The Cloud-Native API Gateway
https://github.com/apache/streampipes # Apache StreamPipes - A self-service (Industrial) IoT toolbox to enable non-technical users to connect, analyze and explore IoT data
streams. https://github.com/apache/nifi-minifi-cpp # Apache NiFi - MiNiFi C++
https://github.com/apache/logging-flume-kafka # Apache Flume Kafka contains the Flume components that interact with Kafka.
https://github.com/apache/amoro # Apache Amoro (incubating) is a Lakehouse management system built on open data lake formats.
https://github.com/apache/doris # Apache Doris is an easy-to-use, high performance and unified analytics database.
https://github.com/apache/pekko-connectors # Apache Pekko Connectors is a Reactive Enterprise Integration library for Java and Scala, based on Reactive Streams and Apache
Pekko. https://github.com/apache/hertzbeat # Apache HertzBeat(incubating) is a real-time monitoring system with agentless, performance cluster, prometheus-compatible, custom moni
toring and status page building capabilities. https://github.com/apache/pekko-projection # Apache Pekko Projections is intended for building systems with the CQRS pattern, and facilitate in event-based service-to-serv
ice communication. https://github.com/apache/sling-org-apache-sling-distribution-journal-kafka # Apache Sling Journal Messaging based on Apache Kafka
https://github.com/apache/camel-kamelets # Apache Camel Kamelets Repository
https://github.com/apache/openwhisk-deploy-kube # The Apache OpenWhisk Kubernetes Deployment repository supports deploying the Apache OpenWhisk system on Kubernetes and Op
enShift clusters. https://github.com/apache/openwhisk-release # Tools and documentation for Apache OpenWhisk Release Managers
https://github.com/apache/seatunnel-datasource-sdk # SeaTunnel is a distributed, high-performance data integration platform for the synchronization and transformation of m
assive data (offline & real-time). https://github.com/apache/aries-journaled-events # Apache aries
https://github.com/apache/geronimo-opentracing # Apache Geronimo Microprofile OpenTracing implementation
https://github.com/apache/karaf-reactive-components # Apache Karaf Reactive Components
https://github.com/apache/camel-website # Apache Camel Website
https://github.com/apache/kafka-merge-queue-sandbox # Apache kafka
